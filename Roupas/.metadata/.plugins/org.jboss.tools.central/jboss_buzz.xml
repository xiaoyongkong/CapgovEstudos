<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" media="screen" href="/~d/styles/atom10full.xsl"?><?xml-stylesheet type="text/css" media="screen" href="http://feeds.feedburner.com/~d/styles/itemcontent.css"?><feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0"><title>JBoss Tools Aggregated Feed</title><link rel="alternate" href="http://tools.jboss.org" /><subtitle>JBoss Tools Aggregated Feed</subtitle><dc:creator>JBoss Tools</dc:creator><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="self" type="application/atom+xml" href="http://feeds.feedburner.com/jbossbuzz" /><feedburner:info uri="jbossbuzz" /><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="hub" href="http://pubsubhubbub.appspot.com/" /><entry><title>Infinispan 9.3.0.CR1</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/h8V7krVCbLg/infinispan-930cr1.html" /><category term="9.3" scheme="searchisko:content:tags" /><category term="feed_group_name_infinispan" scheme="searchisko:content:tags" /><category term="feed_name_infinispan" scheme="searchisko:content:tags" /><category term="release" scheme="searchisko:content:tags" /><category term="release candidate" scheme="searchisko:content:tags" /><author><name>rigazilla</name></author><id>searchisko:content:id:jbossorg_blog-infinispan_9_3_0_cr1</id><updated>2018-06-04T08:01:07Z</updated><published>2018-06-04T08:01:00Z</published><content type="html">&lt;span style="font-family: inherit;"&gt;&lt;span style="font-size: small;"&gt;Dear Infinispan Community,&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: inherit;"&gt;&lt;span style="font-size: small;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="font-family: inherit;"&gt;&lt;span style="font-size: small;"&gt;we're glad to announce that 9.3.0.CR1 is out!&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span style="font-family: inherit;"&gt;&lt;span style="font-size: small;"&gt;This is the &lt;span style="background-color: transparent; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;first release which works with both Java 8 and Java 10. Pre-releases of Java 11 work too. Note that Infinispan still only works in classpath mode.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span style="font-family: inherit;"&gt;&lt;span style="font-size: small;"&gt;Highlights of this release include:&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;&lt;span style="font-family: inherit;"&gt;&lt;span style="font-size: small;"&gt;&lt;span style="background-color: transparent; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;&lt;span style="font-family: inherit;"&gt;&lt;span id="docs-internal-guid-fcf54778-c9b3-e418-2086-683286f85b79" style="background-color: transparent; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;Expanded transaction support in Hot Rod, which can now participate in Java transactions via Sync or Xa enlistment. Transaction recovery isn't supported yet.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: inherit;"&gt;&lt;span style="font-size: small;"&gt;&lt;span style="background-color: transparent; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style="font-family: inherit;"&gt;&lt;span style="font-size: small;"&gt;&lt;span style="background-color: transparent; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;Caches can now configure the maximum number of attempts to start a CacheWriter/CacheLoader on startup before cache creation fails.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style="font-family: inherit;"&gt;&lt;span style="font-size: small;"&gt;&lt;span style="background-color: transparent; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;Write-behind stores are now fault-tolerant by default&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style="font-family: inherit;"&gt;&lt;span style="font-size: small;"&gt;&lt;span style="background-color: transparent; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;Segmented On-Heap Data Container improves stream operation performance&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style="font-family: inherit;"&gt;&lt;span style="font-size: small;"&gt;&lt;span style="background-color: transparent; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;We have introduced several WildFly feature packs to make it easier for Infinispan to be utilised on WildFly instances via the &lt;/span&gt;&lt;a href="https://github.com/wildfly/wildfly-build-tools" style="text-decoration: none;"&gt;&lt;span style="background-color: transparent; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: underline; vertical-align: baseline; white-space: pre-wrap;"&gt;Server Provisioning Plugin&lt;/span&gt;&lt;/a&gt;&lt;span style="background-color: transparent; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;. The following feature packs have been created:&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;ul&gt;&lt;li&gt;&lt;span style="font-family: inherit;"&gt;&lt;span style="font-size: small;"&gt;&lt;span style="background-color: transparent; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;infinispan-feature-pack-client: all of the modules required to connect to a hotrod server via the client&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style="font-family: inherit;"&gt;&lt;span style="font-size: small;"&gt;&lt;span style="background-color: transparent; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;infinispan-feature-pack-embedded: the modules required for embedded instances of Infinispan&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style="font-family: inherit;"&gt;&lt;span style="font-size: small;"&gt;&lt;span style="background-color: transparent; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;infinispan-feature-pack-embedded-query: the same as above but with query capabilities&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style="font-family: inherit;"&gt;&lt;span style="font-size: small;"&gt;&lt;span style="background-color: transparent; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;infinispan-feature-pack-wf-modules: this is equivalent to the wildfly-modules.zip&lt;/span&gt;&lt;span style="background-color: transparent; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;&lt;br class="kix-line-break" /&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;span style="font-family: inherit;"&gt;&lt;span style="font-size: small;"&gt;&lt;span style="background-color: transparent; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;2-Level cache now works with Hibernate ORM 5.3&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style="font-family: inherit;"&gt;&lt;span style="font-size: small;"&gt;&lt;span style="background-color: transparent; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;The server now allows multiple protocols with a Single Port. The initial version supports HTTP/1.1, HTTP/2 and Hot Rod. Switching protocols can be done using TLS/ALPN and HTTP/1.1 Upgrade header.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style="font-family: inherit;"&gt;&lt;span style="font-size: small;"&gt;&lt;span style="background-color: transparent; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;Admin console - improved all editors (schema, scripts, JSON data) to include syntax highlighting &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style="font-family: inherit;"&gt;&lt;span style="font-size: small;"&gt;&lt;span style="background-color: transparent; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;Component Upgrades: Hibernate Search 5.10 and Hibernate ORM 5.3&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;span style="font-family: inherit;"&gt;&lt;span style="font-size: small;"&gt;&lt;span style="background-color: transparent; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;Numerous bug fixes which improve stability are also included (&lt;a href="https://issues.jboss.org/secure/ReleaseNote.jspa?projectId=12310799&amp;amp;version=12337256"&gt;here&lt;/a&gt; is the full list of the solved issues).&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span style="font-family: inherit;"&gt;&lt;span style="background-color: white; font-size: small;"&gt;As usual, you can find all the bits on our&amp;nbsp;&lt;/span&gt;&lt;span style="font-size: small;"&gt;&lt;a href="http://infinispan.org/download/" style="background-color: white;" target="_blank"&gt;website&lt;/a&gt;&lt;span style="background-color: white;"&gt;. If you find any issues, don't hesitate to report them on our&amp;nbsp;&lt;/span&gt;&lt;a href="https://issues.jboss.org/projects/ISPN" style="background-color: white;" target="_blank"&gt;issue tracker.&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;img src="http://feeds.feedburner.com/~r/Infinispan/~4/nqwoDn1T4_g" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/h8V7krVCbLg" height="1" width="1" alt=""/&gt;</content><summary>Dear Infinispan Community, we're glad to announce that 9.3.0.CR1 is out! This is the first release which works with both Java 8 and Java 10. Pre-releases of Java 11 work too. Note that Infinispan still only works in classpath mode. Highlights of this release include: Expanded transaction support in Hot Rod, which can now participate in Java transactions via Sync or Xa enlistment. Transaction recov...</summary><dc:creator>rigazilla</dc:creator><dc:date>2018-06-04T08:01:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/Infinispan/~3/nqwoDn1T4_g/infinispan-930cr1.html</feedburner:origLink></entry><entry><title>Red Hat Fuse 7 Is Now Available</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/11WfoW8cpdY/" /><category term="Agile Integration" scheme="searchisko:content:tags" /><category term="Announcement" scheme="searchisko:content:tags" /><category term="Camel" scheme="searchisko:content:tags" /><category term="cloud-native apps" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="FUSE" scheme="searchisko:content:tags" /><category term="Fuse Ignite" scheme="searchisko:content:tags" /><category term="Fuse online" scheme="searchisko:content:tags" /><category term="integration" scheme="searchisko:content:tags" /><category term="JBoss Fuse" scheme="searchisko:content:tags" /><category term="Red Hat Fuse" scheme="searchisko:content:tags" /><author><name>Christina Lin</name></author><id>searchisko:content:id:jbossorg_blog-red_hat_fuse_7_is_now_available</id><updated>2018-06-04T07:00:12Z</updated><published>2018-06-04T07:00:12Z</published><content type="html">&lt;p&gt;Red Hat Fuse 7 (formerly called Red Hat JBoss Fuse) is now officially available. This cloud-native, distributed solution allows developers to easily develop, deploy and scale integration applications. Architects can compose and orchestrate microservices with Red Hat Fuse to introduce agility to the systems. In this release, Fuse also empowers integration experts and business users to become more productive with the self-service low-code platform. With this new agile integration solution, enterprises can now engage in wider collaboration with and among partners at a much quicker pace.&lt;/p&gt; &lt;p&gt;Here&amp;#8217;s where you can download it: &lt;a href="https://developers.redhat.com/products/fuse/download/"&gt;https://developers.redhat.com/products/fuse/download/&lt;/a&gt;.&lt;/p&gt; &lt;h1&gt;What&amp;#8217;s in Fuse 7?&lt;/h1&gt; &lt;p class="separator"&gt;&lt;a href="http://2.bp.blogspot.com/-9E79_vFzxts/Ww110GhueiI/AAAAAAAAFiA/JFISyFzIR4o7ZT-X0tNUmhG74vzPZ3owgCK4BGAYYCw/s1600/Screen%2BShot%2B2018-05-29%2Bat%2B11.45.33%2BAM.png"&gt;&lt;img src="https://2.bp.blogspot.com/-9E79_vFzxts/Ww110GhueiI/AAAAAAAAFiA/JFISyFzIR4o7ZT-X0tNUmhG74vzPZ3owgCK4BGAYYCw/s640/Screen%2BShot%2B2018-05-29%2Bat%2B11.45.33%2BAM.png" width="640" height="256" border="0" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;span id="more-496257"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;Camel still is the core component in Fuse. Due to the complexity of integration solutions, a pattern-based integration solution is crucial for preventing developers from falling into complex, tangled, and spaghetti-like integration logic. Therefore, pre-built components and pre-defined patterns are always going to be the way to develop integration solutions, regardless of whether they are local or in the cloud.&lt;/p&gt; &lt;p&gt;Narayana is now the transaction technology, to get you ready for handling more-complex distributed transactions.&lt;/p&gt; &lt;p&gt;Jetty is deprecated and replaced by a more streamlined, lightweight web container: Undertow.&lt;/p&gt; &lt;p&gt;One of the most common questions I get from people just getting started with Fuse is, &amp;#8220;Why do you need to have so many different options for runtime?&amp;#8221; It&amp;#8217;s because we believe developers should be able to choose what best suits them, for example:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Spring Boot for microservices&lt;/li&gt; &lt;li&gt;Karaf 4 for OSGi lover&lt;/li&gt; &lt;li&gt;Red Hat JBoss Enterprise Application Platform for Java EE developers&lt;/li&gt; &lt;/ul&gt; &lt;h1&gt;A Cloud-Native Integration Platform&lt;/h1&gt; &lt;p&gt;Building cloud-native applications can be complicated. Integrating them as well as making the integration solution itself be cloud-ready is even more challenging. You need to address the entire software lifecycle as whole, for example, creating applications with a smaller footprint, automating the deployment flow, and monitoring applications in a distributed environment.  Because the Fuse 7 platform&amp;#8217;s features and technology that take care of much of this complexity, integration teams can now focus on the most important thing: the business logic of the integration application.&lt;/p&gt; &lt;p&gt;&lt;b&gt;Lightweight Development&lt;/b&gt;&lt;/p&gt; &lt;p&gt;Building a small-footprint microservice/service is the most fundamental thing when it comes to moving integration into the cloud. Both the Spring Boot and Karaf runtimes are lightweight and microservices-enabled. Developers can take advantage of pattern-based integration in Camel, and plugins help developers package their integration application as a container to be cloud-ready.&lt;/p&gt; &lt;p&gt;&lt;a href="http://4.bp.blogspot.com/-t0lL6-5-Z1w/Ww6lbUhGUAI/AAAAAAAAFiM/TJ5EHgC6adQLm6Fw1BEjP8yWmnlbXLnogCK4BGAYYCw/s1600/Screen%2BShot%2B2018-05-30%2Bat%2B9.21.14%2BAM.png"&gt;&lt;img src="https://4.bp.blogspot.com/-t0lL6-5-Z1w/Ww6lbUhGUAI/AAAAAAAAFiM/TJ5EHgC6adQLm6Fw1BEjP8yWmnlbXLnogCK4BGAYYCw/s640/Screen%2BShot%2B2018-05-30%2Bat%2B9.21.14%2BAM.png" width="640" height="252" border="0" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;b&gt;Hybrid Deployment  &lt;/b&gt;&lt;/p&gt; &lt;p&gt;After deployment, Fuse 7 helps developers to package the application into immutable images. Based on your versioning and deployment strategy, these images can be tagged and sent along to be deployed in different stages of the environment. The platform also takes care of the availability, scalability, and resiliency for the application; scaling up and down the application require just a few clicks in the UI. Or, if you prefer to automate that, you can.  The application not only runs in the cloud, it can also be run as a single, standalone application. All three runtimes are available to run in both scenarios.&lt;/p&gt; &lt;p&gt;&lt;a href="http://4.bp.blogspot.com/-6l0NHGizR6Q/Ww8HSQd1wMI/AAAAAAAAFik/v31J_1Hl_K8ZZV2s2XS5h3sIWRg6zRSpgCK4BGAYYCw/s1600/Screen%2BShot%2B2018-05-30%2Bat%2B4.18.44%2BPM.png"&gt;&lt;img src="https://4.bp.blogspot.com/-6l0NHGizR6Q/Ww8HSQd1wMI/AAAAAAAAFik/v31J_1Hl_K8ZZV2s2XS5h3sIWRg6zRSpgCK4BGAYYCw/s640/Screen%2BShot%2B2018-05-30%2Bat%2B4.18.44%2BPM.png" width="640" height="296" border="0" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;b&gt;Management That Provides a Centralized Application View&lt;/b&gt;&lt;/p&gt; &lt;p&gt;Managing a distributed cloud environment is a nightmare: instead of a couple instances, you now have thousands of individual running instances. Fuse gives you a centralized viewing console in the cloud environment, so it will be much easier to locate all the running Fuse instances. Also, each running application is managed by Red Hat OpenShift, which provides comprehensive features for managing applications in the cloud.&lt;/p&gt; &lt;p&gt;&lt;a href="http://2.bp.blogspot.com/-5vuMgeWbtvA/Ww6nYebQzZI/AAAAAAAAFiY/lmGgxlc1pr0zVc6Dec4b9bawRN1-fLfvACK4BGAYYCw/s1600/Screen%2BShot%2B2018-05-30%2Bat%2B9.29.54%2BAM.png"&gt;&lt;img src="https://2.bp.blogspot.com/-5vuMgeWbtvA/Ww6nYebQzZI/AAAAAAAAFiY/lmGgxlc1pr0zVc6Dec4b9bawRN1-fLfvACK4BGAYYCw/s640/Screen%2BShot%2B2018-05-30%2Bat%2B9.29.54%2BAM.png" width="640" height="290" border="0" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;b&gt;Low-Code Integration for Citizen Integrators&lt;/b&gt;&lt;/p&gt; &lt;p&gt;Another new feature introduced in Fuse 7 is the Red Hat Fuse Online self-service platform, which allows citizen integrators to build integration services on their own. Fuse 7 allows a company to have a single, standardized platform instead of having multiple pieces of technology for different user characteristics, allowing maximum collaboration between developers and citizen integrators. With the intuitive interface and the highly customizable components&amp;#8217; capabilities, citizen integrators can quickly deliver an integration solution without waiting for a developer&amp;#8217;s implementation. And developers can concentrate on developing more-complex integration logic and also package that into the platform so the citizen integrators can re-use it on the fly.&lt;/p&gt; &lt;p&gt;When you log in to the platform, you will be greeted with an overview of all the available integrations and connectors as well as the status of the running integrations.&lt;/p&gt; &lt;p&gt;&lt;a href="http://1.bp.blogspot.com/-VScVy1BY8A8/Ww8xTOYTJcI/AAAAAAAAFiw/dkQqgW8WAZcSg2Qg3w53-ZidQFQRch_yQCK4BGAYYCw/s1600/Screen%2BShot%2B2018-05-30%2Bat%2B7.16.51%2BPM.png"&gt;&lt;img src="https://1.bp.blogspot.com/-VScVy1BY8A8/Ww8xTOYTJcI/AAAAAAAAFiw/dkQqgW8WAZcSg2Qg3w53-ZidQFQRch_yQCK4BGAYYCw/s640/Screen%2BShot%2B2018-05-30%2Bat%2B7.16.51%2BPM.png" width="640" height="358" border="0" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Integrations allow an integrator to create an application by simply dragging and dropping the pre-built connectors or by mapping between input source and output target data.&lt;/p&gt; &lt;p class="separator"&gt;&lt;a href="http://3.bp.blogspot.com/-LNWmeWDvtpI/Ww8yN5OWqbI/AAAAAAAAFi8/3CPUPIFR5-sDOQhw8pIgxBGstdeVPRiZgCK4BGAYYCw/s1600/Screen%2BShot%2B2018-05-30%2Bat%2B7.20.38%2BPM.png"&gt;&lt;img src="https://3.bp.blogspot.com/-LNWmeWDvtpI/Ww8yN5OWqbI/AAAAAAAAFi8/3CPUPIFR5-sDOQhw8pIgxBGstdeVPRiZgCK4BGAYYCw/s640/Screen%2BShot%2B2018-05-30%2Bat%2B7.20.38%2BPM.png" width="640" height="204" border="0" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href="http://1.bp.blogspot.com/-BY8QWnfJUxg/Ww8yPOmnLCI/AAAAAAAAFjE/jp1cS7EAggsysvI-UDl6dx8LCQV6MXm2gCK4BGAYYCw/s1600/Screen%2BShot%2B2018-05-30%2Bat%2B7.20.48%2BPM.png"&gt;&lt;img src="https://1.bp.blogspot.com/-BY8QWnfJUxg/Ww8yPOmnLCI/AAAAAAAAFjE/jp1cS7EAggsysvI-UDl6dx8LCQV6MXm2gCK4BGAYYCw/s640/Screen%2BShot%2B2018-05-30%2Bat%2B7.20.48%2BPM.png" width="640" height="216" border="0" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;When there is a need for more-complex process, you can also add customized connectors by simply importing the project package into the system. The customized connectors can be created by the in-house developer or provided online from our open source community.&lt;/p&gt; &lt;p&gt;&lt;a href="http://4.bp.blogspot.com/-EGRk1K_ScWs/Ww83KV31FUI/AAAAAAAAFjU/0hyM9rqiO9UOAfbmY2OLzL23EbYqpYAXQCK4BGAYYCw/s1600/Screen%2BShot%2B2018-05-30%2Bat%2B7.43.15%2BPM.png"&gt;&lt;img src="https://4.bp.blogspot.com/-EGRk1K_ScWs/Ww83KV31FUI/AAAAAAAAFjU/0hyM9rqiO9UOAfbmY2OLzL23EbYqpYAXQCK4BGAYYCw/s640/Screen%2BShot%2B2018-05-30%2Bat%2B7.43.15%2BPM.png" width="640" height="160" border="0" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;h1&gt;Try Fuse 7 Now&lt;/h1&gt; &lt;p&gt;You can try the new version of the platform here:&lt;/p&gt; &lt;p&gt;&lt;a href="https://www.redhat.com/en/explore/fuse-online"&gt;https://www.redhat.com/en/explore/fuse-online&lt;/a&gt;&lt;/p&gt; &lt;p&gt;So what are you waiting for? Start your new Fuse 7 adventure today.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F04%2Fred-hat-fuse-7-is-now-available%2F&amp;#38;linkname=Red%20Hat%20Fuse%207%20Is%20Now%20Available" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F04%2Fred-hat-fuse-7-is-now-available%2F&amp;#38;linkname=Red%20Hat%20Fuse%207%20Is%20Now%20Available" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F04%2Fred-hat-fuse-7-is-now-available%2F&amp;#38;linkname=Red%20Hat%20Fuse%207%20Is%20Now%20Available" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F04%2Fred-hat-fuse-7-is-now-available%2F&amp;#38;linkname=Red%20Hat%20Fuse%207%20Is%20Now%20Available" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F04%2Fred-hat-fuse-7-is-now-available%2F&amp;#38;linkname=Red%20Hat%20Fuse%207%20Is%20Now%20Available" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F04%2Fred-hat-fuse-7-is-now-available%2F&amp;#38;linkname=Red%20Hat%20Fuse%207%20Is%20Now%20Available" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F04%2Fred-hat-fuse-7-is-now-available%2F&amp;#38;linkname=Red%20Hat%20Fuse%207%20Is%20Now%20Available" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F04%2Fred-hat-fuse-7-is-now-available%2F&amp;#38;linkname=Red%20Hat%20Fuse%207%20Is%20Now%20Available" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F04%2Fred-hat-fuse-7-is-now-available%2F&amp;#38;title=Red%20Hat%20Fuse%207%20Is%20Now%20Available" data-a2a-url="https://developers.redhat.com/blog/2018/06/04/red-hat-fuse-7-is-now-available/" data-a2a-title="Red Hat Fuse 7 Is Now Available"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/06/04/red-hat-fuse-7-is-now-available/"&gt;Red Hat Fuse 7 Is Now Available&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/11WfoW8cpdY" height="1" width="1" alt=""/&gt;</content><summary>Red Hat Fuse 7 (formerly called Red Hat JBoss Fuse) is now officially available. This cloud-native, distributed solution allows developers to easily develop, deploy and scale integration applications. Architects can compose and orchestrate microservices with Red Hat Fuse to introduce agility to the systems. In this release, Fuse also empowers integration experts and business users to become more p...</summary><dc:creator>Christina Lin</dc:creator><dc:date>2018-06-04T07:00:12Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/06/04/red-hat-fuse-7-is-now-available/</feedburner:origLink></entry><entry><title>Red Hat Fuse 7 - Announcing Red Hat Fuse 7 GA!!</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/ppmGBvQ3DHM/red-hat-fuse-7-announcing-red-hat-fuse.html" /><category term="feed_group_name_global" scheme="searchisko:content:tags" /><category term="feed_name_christinalineng" scheme="searchisko:content:tags" /><author><name>Christina Lin</name></author><id>searchisko:content:id:jbossorg_blog-red_hat_fuse_7_announcing_red_hat_fuse_7_ga</id><updated>2018-06-04T13:35:50Z</updated><published>2018-06-04T06:30:00Z</published><content type="html">Red Hat Fuse 7 (formerly called Red Hat JBoss Fuse) is now officially available. This cloud-native, distributed solution allows developers to easily develop, deploy and scale integration applications. Architects can compose and orchestrate microservices with Red Hat Fuse to introduce agility to the systems. In this release, Fuse also&amp;nbsp;empowers integration experts and business users to become more productive with the self-service low-code platform. With this new agile integration solution, enterprises can now engage in wider collaboration with and among partners at a much quicker pace.&lt;br /&gt;Here's where you can download it:&amp;nbsp;&lt;a href="https://developers.redhat.com/products/fuse/download/"&gt;https://developers.redhat.com/products/fuse/download/&lt;/a&gt;.&lt;br /&gt;&lt;h1&gt;What's in Fuse 7?&lt;/h1&gt;&lt;div class="separator"&gt;&lt;a href="http://2.bp.blogspot.com/-9E79_vFzxts/Ww110GhueiI/AAAAAAAAFiA/JFISyFzIR4o7ZT-X0tNUmhG74vzPZ3owgCK4BGAYYCw/s1600/Screen%2BShot%2B2018-05-29%2Bat%2B11.45.33%2BAM.png"&gt;&lt;img border="0" height="256" src="https://2.bp.blogspot.com/-9E79_vFzxts/Ww110GhueiI/AAAAAAAAFiA/JFISyFzIR4o7ZT-X0tNUmhG74vzPZ3owgCK4BGAYYCw/s640/Screen%2BShot%2B2018-05-29%2Bat%2B11.45.33%2BAM.png" width="640" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;Camel still&amp;nbsp;is the core component in Fuse. Due to the complexity&amp;nbsp;of integration solutions, a pattern-based integration solution is crucial for preventing developers from falling into complex, tangled, and spaghetti-like integration logic. Therefore, pre-built components and pre-defined patterns are always going to be the way to develop integration solutions, regardless of whether they are local or in the cloud.&lt;br /&gt;Narayana is now the transaction technology, to get you ready for handling more-complex distributed transactions.&lt;br /&gt;Jetty is deprecated and replaced by a more streamlined, lightweight web container: Undertow.&lt;br /&gt;One of the most common questions I get from people just getting started with Fuse is, "Why do you need to have so many different options for runtime?" It's because we believe developers should be able to choose what best suits them, for example:&lt;br /&gt;&lt;ul&gt;&lt;li&gt;Spring Boot for microservices&lt;/li&gt;&lt;li&gt;Karaf 4 for OSGi lover&lt;/li&gt;&lt;li&gt;Red Hat JBoss Enterprise Application Platform for Java EE developers&lt;/li&gt;&lt;/ul&gt;&lt;h1&gt;A Cloud-Native Integration Platform&lt;/h1&gt;Building cloud-native applications can be complicated. Integrating them as well as making the integration solution itself be cloud-ready is even more challenging.&amp;nbsp;You need to address the entire software lifecycle as whole, for example, creating applications with a&amp;nbsp;smaller footprint, automating the deployment flow, and monitoring applications in a distributed environment. &amp;nbsp;Because the Fuse 7 platform's features and technology that take care of much of this&amp;nbsp;complexity, integration teams can now focus on the most important thing: the business logic of the integration application.&lt;br /&gt;&lt;b&gt;Lightweight Development&lt;/b&gt;&lt;br /&gt;Building a small-footprint microservice/service is the most fundamental thing when it comes to moving integration into the cloud. Both the Spring Boot and Karaf runtimes are lightweight and microservices-enabled. Developers can take advantage of pattern-based integration in Camel, and plugins help developers package their integration application as a container to be cloud-ready.&lt;br /&gt;&lt;a href="http://4.bp.blogspot.com/-t0lL6-5-Z1w/Ww6lbUhGUAI/AAAAAAAAFiM/TJ5EHgC6adQLm6Fw1BEjP8yWmnlbXLnogCK4BGAYYCw/s1600/Screen%2BShot%2B2018-05-30%2Bat%2B9.21.14%2BAM.png"&gt;&lt;img border="0" height="252" src="https://4.bp.blogspot.com/-t0lL6-5-Z1w/Ww6lbUhGUAI/AAAAAAAAFiM/TJ5EHgC6adQLm6Fw1BEjP8yWmnlbXLnogCK4BGAYYCw/s640/Screen%2BShot%2B2018-05-30%2Bat%2B9.21.14%2BAM.png" width="640" /&gt;&lt;/a&gt;&lt;br /&gt;&lt;b&gt;Hybrid Deployment &amp;nbsp;&lt;/b&gt;&lt;br /&gt;After deployment, Fuse 7 helps developers to package the application into immutable images. Based on your versioning and deployment strategy, these images can be tagged and sent along to be deployed in different stages of the&amp;nbsp;environment. The platform also takes care of the availability, scalability, and resiliency for the application; scaling up and down the application require just a few clicks in the UI. Or, if you prefer to automate that, you can.&amp;nbsp; The application not only runs in the cloud, it can also be run as a single, standalone application. All three runtimes are available to run in both scenarios.&lt;br /&gt;&lt;a href="http://4.bp.blogspot.com/-6l0NHGizR6Q/Ww8HSQd1wMI/AAAAAAAAFik/v31J_1Hl_K8ZZV2s2XS5h3sIWRg6zRSpgCK4BGAYYCw/s1600/Screen%2BShot%2B2018-05-30%2Bat%2B4.18.44%2BPM.png"&gt;&lt;img border="0" height="296" src="https://4.bp.blogspot.com/-6l0NHGizR6Q/Ww8HSQd1wMI/AAAAAAAAFik/v31J_1Hl_K8ZZV2s2XS5h3sIWRg6zRSpgCK4BGAYYCw/s640/Screen%2BShot%2B2018-05-30%2Bat%2B4.18.44%2BPM.png" width="640" /&gt;&lt;/a&gt;&lt;br /&gt;&lt;b&gt;Management That Provides a Centralized Application View&lt;/b&gt;&lt;br /&gt;Managing a distributed cloud environment is a nightmare: instead of a couple instances, you now have thousands of individual running instances. Fuse gives you a centralized viewing console in the cloud environment, so it will be much easier to locate all the running Fuse instances. Also, each running application is managed by Red Hat OpenShift, which provides comprehensive features for managing applications in the cloud.&lt;br /&gt;&lt;a href="http://2.bp.blogspot.com/-5vuMgeWbtvA/Ww6nYebQzZI/AAAAAAAAFiY/lmGgxlc1pr0zVc6Dec4b9bawRN1-fLfvACK4BGAYYCw/s1600/Screen%2BShot%2B2018-05-30%2Bat%2B9.29.54%2BAM.png"&gt;&lt;img border="0" height="290" src="https://2.bp.blogspot.com/-5vuMgeWbtvA/Ww6nYebQzZI/AAAAAAAAFiY/lmGgxlc1pr0zVc6Dec4b9bawRN1-fLfvACK4BGAYYCw/s640/Screen%2BShot%2B2018-05-30%2Bat%2B9.29.54%2BAM.png" width="640" /&gt;&lt;/a&gt;&lt;br /&gt;&lt;b&gt;Low-Code Integration for Citizen Integrators&lt;/b&gt;&lt;br /&gt;Another new feature introduced in Fuse 7 is the Red Hat Fuse Online self-service platform, which allows citizen&amp;nbsp;integrators to build integration services on their own. Fuse 7 allows a&amp;nbsp;company to have a single, standardized platform instead of having multiple pieces of technology for different user characteristics, allowing maximum collaboration between developers and citizen integrators. With the intuitive interface&amp;nbsp;and the highly customizable components' capabilities, citizen integrators can quickly deliver an integration solution without waiting for a developer's implementation. And developers can concentrate on developing more-complex integration logic and also package that into the platform so the&amp;nbsp;citizen integrators can re-use it on the fly.&lt;br /&gt;When you log in to the platform, you will be greeted with an overview of all the available integrations and connectors as well as the status of the running integrations.&lt;br /&gt;&lt;a href="http://1.bp.blogspot.com/-VScVy1BY8A8/Ww8xTOYTJcI/AAAAAAAAFiw/dkQqgW8WAZcSg2Qg3w53-ZidQFQRch_yQCK4BGAYYCw/s1600/Screen%2BShot%2B2018-05-30%2Bat%2B7.16.51%2BPM.png"&gt;&lt;img border="0" height="358" src="https://1.bp.blogspot.com/-VScVy1BY8A8/Ww8xTOYTJcI/AAAAAAAAFiw/dkQqgW8WAZcSg2Qg3w53-ZidQFQRch_yQCK4BGAYYCw/s640/Screen%2BShot%2B2018-05-30%2Bat%2B7.16.51%2BPM.png" width="640" /&gt;&lt;/a&gt;&lt;br /&gt;Integrations allow an integrator to create an application by simply dragging and dropping the pre-built connectors&amp;nbsp;or by mapping between input source and output target data.&lt;br /&gt;&lt;div class="separator"&gt;&lt;a href="http://3.bp.blogspot.com/-LNWmeWDvtpI/Ww8yN5OWqbI/AAAAAAAAFi8/3CPUPIFR5-sDOQhw8pIgxBGstdeVPRiZgCK4BGAYYCw/s1600/Screen%2BShot%2B2018-05-30%2Bat%2B7.20.38%2BPM.png"&gt;&lt;img border="0" height="204" src="https://3.bp.blogspot.com/-LNWmeWDvtpI/Ww8yN5OWqbI/AAAAAAAAFi8/3CPUPIFR5-sDOQhw8pIgxBGstdeVPRiZgCK4BGAYYCw/s640/Screen%2BShot%2B2018-05-30%2Bat%2B7.20.38%2BPM.png" width="640" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;a href="http://1.bp.blogspot.com/-BY8QWnfJUxg/Ww8yPOmnLCI/AAAAAAAAFjE/jp1cS7EAggsysvI-UDl6dx8LCQV6MXm2gCK4BGAYYCw/s1600/Screen%2BShot%2B2018-05-30%2Bat%2B7.20.48%2BPM.png"&gt;&lt;img border="0" height="216" src="https://1.bp.blogspot.com/-BY8QWnfJUxg/Ww8yPOmnLCI/AAAAAAAAFjE/jp1cS7EAggsysvI-UDl6dx8LCQV6MXm2gCK4BGAYYCw/s640/Screen%2BShot%2B2018-05-30%2Bat%2B7.20.48%2BPM.png" width="640" /&gt;&lt;/a&gt;&lt;br /&gt;When there is a need for more-complex process, you can also add customized connectors by simply importing the project package into the system. The customized connectors can be created by the in-house developer or provided online from our open source community.&lt;br /&gt;&lt;a href="http://4.bp.blogspot.com/-EGRk1K_ScWs/Ww83KV31FUI/AAAAAAAAFjU/0hyM9rqiO9UOAfbmY2OLzL23EbYqpYAXQCK4BGAYYCw/s1600/Screen%2BShot%2B2018-05-30%2Bat%2B7.43.15%2BPM.png"&gt;&lt;img border="0" height="160" src="https://4.bp.blogspot.com/-EGRk1K_ScWs/Ww83KV31FUI/AAAAAAAAFjU/0hyM9rqiO9UOAfbmY2OLzL23EbYqpYAXQCK4BGAYYCw/s640/Screen%2BShot%2B2018-05-30%2Bat%2B7.43.15%2BPM.png" width="640" /&gt;&lt;/a&gt;&lt;br /&gt;&lt;h1&gt;Try Fuse 7 Now&lt;/h1&gt;You can try the new version of the platform here:&lt;br /&gt;&lt;a href="https://www.redhat.com/en/explore/fuse-online"&gt;https://www.redhat.com/en/explore/fuse-online&lt;/a&gt;&lt;br /&gt;So what are you waiting for? Start your new Fuse 7 adventure today.&lt;img src="http://feeds.feedburner.com/~r/blogspot/hFXzh/~4/JWPlMue5Uuo" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/ppmGBvQ3DHM" height="1" width="1" alt=""/&gt;</content><summary>Red Hat Fuse 7 (formerly called Red Hat JBoss Fuse) is now officially available. This cloud-native, distributed solution allows developers to easily develop, deploy and scale integration applications. Architects can compose and orchestrate microservices with Red Hat Fuse to introduce agility to the systems. In this release, Fuse also empowers integration experts and business users to become more p...</summary><dc:creator>Christina Lin</dc:creator><dc:date>2018-06-04T06:30:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/blogspot/hFXzh/~3/JWPlMue5Uuo/red-hat-fuse-7-announcing-red-hat-fuse.html</feedburner:origLink></entry><entry><title>The best way to write a Hibernate ORM issue test case</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/nf1zqBu19TI/" /><category term="Discussions" scheme="searchisko:content:tags" /><category term="feed_group_name_hibernate" scheme="searchisko:content:tags" /><category term="feed_name_inrelationto" scheme="searchisko:content:tags" /><category term="Hibernate ORM" scheme="searchisko:content:tags" /><author><name>Vlad Mihalcea</name></author><id>searchisko:content:id:jbossorg_blog-the_best_way_to_write_a_hibernate_orm_issue_test_case</id><updated>2018-06-04T12:11:26Z</updated><published>2018-06-04T00:00:00Z</published><content type="html">&lt;div id="preamble"&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;A while ago, I wrote &lt;a href="http://in.relation.to/2016/01/14/hibernate-jpa-test-case-template/"&gt;this article&lt;/a&gt; on the Hibernate blog which shows you how to create a test case which reproduces a certain Hibernate ORM issue.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;In the meanwhile, I came to realize that there is a much better way which I will explain in this article.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="the-hibernate-test-case-templates-drawbacks"&gt;&lt;a class="anchor" href="#the-hibernate-test-case-templates-drawbacks"&gt;&lt;/a&gt;The hibernate-test-case-templates drawbacks&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Although the &lt;a href="https://github.com/hibernate/hibernate-test-case-templates"&gt;&lt;code&gt;hibernate-test-case-templates&lt;/code&gt;&lt;/a&gt; is much better than having to come up with your own test case and figure out the bootstrapping part, there are several drawbacks to it:&lt;/p&gt; &lt;/div&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Being hosted on GitHub, some developers submit their test cases as Pull Requests for the &lt;code&gt;hibernate-test-case-templates&lt;/code&gt; instead of attaching them to the associate Hibernate JIRA issue.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;As a developer, you won’t benefit from our &lt;code&gt;doInJPA&lt;/code&gt; or &lt;code&gt;doInHibernate&lt;/code&gt; utilities we have developed for the Hibernate ORM suite of tests.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Replicating a test case across various databases requires manually changing the database connectivity configuration properties.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;The Hibernate ORM developers need to download the test case from the JIRA issue and manually integrate it to the Hibernate ORM project. However, this also means we cannot attribute the original work to the test case author.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="the-alternative"&gt;&lt;a class="anchor" href="#the-alternative"&gt;&lt;/a&gt;The alternative&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;One alternative which could work better for both Hibernate ORM clients and the core developers is if test cases are submitted as Pull Requests for the &lt;code&gt;hibernate-orm&lt;/code&gt; project itself.&lt;/p&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="forking-the-repository"&gt;&lt;a class="anchor" href="#forking-the-repository"&gt;&lt;/a&gt;Forking the repository&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;First, you need to fork the &lt;a href="https://github.com/hibernate/hibernate-orm"&gt;&lt;code&gt;hibernate-orm&lt;/code&gt;&lt;/a&gt; repository on GitHub.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="http://in.relation.to/images/testcase/GitHubFork.png" alt="GitHub repository fork, align=" width="center" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;That’s exactly how anyone contributing to the Hibernate ORM project work.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="setting-up-the-project"&gt;&lt;a class="anchor" href="#setting-up-the-project"&gt;&lt;/a&gt;Setting up the project&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;You can find a very detailed explanation of how you can setup and build the &lt;code&gt;hibernate-orm&lt;/code&gt; project on &lt;a href="https://github.com/hibernate/hibernate-orm"&gt;the main GitHub&lt;/a&gt; page.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;If you are using IntelliJ IDEA is as simple as importing the project from Gradle.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="creating-the-test-case"&gt;&lt;a class="anchor" href="#creating-the-test-case"&gt;&lt;/a&gt;Creating the test case&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Now that you have set up the &lt;code&gt;hibernate-orm&lt;/code&gt; project, to create a test case you should extend from one of these two base classes:&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;&lt;code&gt;BaseEntityManagerFunctionalTestCase&lt;/code&gt;::For JPA-based test cases. &lt;code&gt;BaseNonConfigCoreFunctionalTestCase&lt;/code&gt;::For test cases requiring the Hibernate-specific bootstrap mechanism.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Let’s assume we want to create a test case for the &lt;a href="https://hibernate.atlassian.net/browse/HHH-12561"&gt;HHH-12561&lt;/a&gt; JIRA issue.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The first thing we need to do is to create a new branch:&lt;/p&gt; &lt;/div&gt; &lt;div class="listingblock"&gt; &lt;div class="content"&gt; &lt;pre class="CodeRay highlight"&gt;&lt;code data-lang="bash"&gt;git checkout -b HHH-12561&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The test case can look as follows:&lt;/p&gt; &lt;/div&gt; &lt;div class="listingblock"&gt; &lt;div class="content"&gt; &lt;pre class="CodeRay highlight"&gt;&lt;code data-lang="java"&gt;&lt;span style="color:#007"&gt;@TestForIssue&lt;/span&gt;( JIRAKey = &lt;span style="background-color:hsla(0,100%,50%,0.05)"&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;span style="color:#D20"&gt;HHH-12561&lt;/span&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;/span&gt; ) &lt;span style="color:#088;font-weight:bold"&gt;public&lt;/span&gt; &lt;span style="color:#339;font-weight:bold"&gt;class&lt;/span&gt; &lt;span style="color:#B06;font-weight:bold"&gt;GlobalQuotedIdentifiersBulkIdTest&lt;/span&gt; &lt;span style="color:#088;font-weight:bold"&gt;extends&lt;/span&gt; BaseEntityManagerFunctionalTestCase { &lt;span style="color:#007"&gt;@Override&lt;/span&gt; &lt;span style="color:#088;font-weight:bold"&gt;protected&lt;/span&gt; &lt;span style="color:#0a8;font-weight:bold"&gt;Class&lt;/span&gt;&amp;lt;?&amp;gt;&lt;span style="color:#339;font-weight:bold"&gt;[]&lt;/span&gt; getAnnotatedClasses() { &lt;span style="color:#080;font-weight:bold"&gt;return&lt;/span&gt; &lt;span style="color:#080;font-weight:bold"&gt;new&lt;/span&gt; &lt;span style="color:#0a8;font-weight:bold"&gt;Class&lt;/span&gt;&amp;lt;?&amp;gt;&lt;span style="color:#339;font-weight:bold"&gt;[]&lt;/span&gt; { Person.class, Doctor.class, Engineer.class }; } &lt;span style="color:#007"&gt;@Override&lt;/span&gt; &lt;span style="color:#088;font-weight:bold"&gt;protected&lt;/span&gt; &lt;span style="color:#339;font-weight:bold"&gt;void&lt;/span&gt; addConfigOptions(&lt;span style="color:#0a8;font-weight:bold"&gt;Map&lt;/span&gt; options) { options.put( AvailableSettings.GLOBALLY_QUOTED_IDENTIFIERS, &lt;span style="color:#0a8;font-weight:bold"&gt;Boolean&lt;/span&gt;.TRUE ); options.put( AvailableSettings.HQL_BULK_ID_STRATEGY, InlineIdsOrClauseBulkIdStrategy.class.getName() ); } &lt;span style="color:#007"&gt;@Before&lt;/span&gt; &lt;span style="color:#088;font-weight:bold"&gt;public&lt;/span&gt; &lt;span style="color:#339;font-weight:bold"&gt;void&lt;/span&gt; setUp() { doInJPA( &lt;span style="color:#950"&gt;this&lt;/span&gt;::entityManagerFactory, entityManager -&amp;gt; { &lt;span style="color:#080;font-weight:bold"&gt;for&lt;/span&gt; ( &lt;span style="color:#339;font-weight:bold"&gt;int&lt;/span&gt; i = &lt;span style="color:#00D"&gt;0&lt;/span&gt;; i &amp;lt; entityCount(); i++ ) { Doctor doctor = &lt;span style="color:#080;font-weight:bold"&gt;new&lt;/span&gt; Doctor(); doctor.setEmployed( ( i % &lt;span style="color:#00D"&gt;2&lt;/span&gt; ) == &lt;span style="color:#00D"&gt;0&lt;/span&gt; ); doctor.setEmployedOn( &lt;span style="color:#0a8;font-weight:bold"&gt;Timestamp&lt;/span&gt;.valueOf( &lt;span style="background-color:hsla(0,100%,50%,0.05)"&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;span style="color:#D20"&gt;2018-06-01 00:00:00&lt;/span&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;/span&gt; ) ); entityManager.persist( doctor ); } &lt;span style="color:#080;font-weight:bold"&gt;for&lt;/span&gt; ( &lt;span style="color:#339;font-weight:bold"&gt;int&lt;/span&gt; i = &lt;span style="color:#00D"&gt;0&lt;/span&gt;; i &amp;lt; entityCount(); i++ ) { Engineer engineer = &lt;span style="color:#080;font-weight:bold"&gt;new&lt;/span&gt; Engineer(); engineer.setEmployed( ( i % &lt;span style="color:#00D"&gt;2&lt;/span&gt; ) == &lt;span style="color:#00D"&gt;0&lt;/span&gt; ); engineer.setEmployedOn( &lt;span style="color:#0a8;font-weight:bold"&gt;Timestamp&lt;/span&gt;.valueOf( &lt;span style="background-color:hsla(0,100%,50%,0.05)"&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;span style="color:#D20"&gt;2018-06-01 00:00:00&lt;/span&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;/span&gt; ) ); engineer.setFellow( ( i % &lt;span style="color:#00D"&gt;2&lt;/span&gt; ) == &lt;span style="color:#00D"&gt;1&lt;/span&gt; ); entityManager.persist( engineer ); } }); } &lt;span style="color:#088;font-weight:bold"&gt;protected&lt;/span&gt; &lt;span style="color:#339;font-weight:bold"&gt;int&lt;/span&gt; entityCount() { &lt;span style="color:#080;font-weight:bold"&gt;return&lt;/span&gt; &lt;span style="color:#00D"&gt;5&lt;/span&gt;; } &lt;span style="color:#007"&gt;@Test&lt;/span&gt; &lt;span style="color:#088;font-weight:bold"&gt;public&lt;/span&gt; &lt;span style="color:#339;font-weight:bold"&gt;void&lt;/span&gt; testBulkUpdate() { doInJPA( &lt;span style="color:#950"&gt;this&lt;/span&gt;::entityManagerFactory, entityManager -&amp;gt; { &lt;span style="color:#339;font-weight:bold"&gt;int&lt;/span&gt; updateCount = entityManager.createQuery( &lt;span style="background-color:hsla(0,100%,50%,0.05)"&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;span style="color:#D20"&gt;UPDATE Person u &lt;/span&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;/span&gt; + &lt;span style="background-color:hsla(0,100%,50%,0.05)"&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;span style="color:#D20"&gt;SET u.employedOn = :date &lt;/span&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;/span&gt; + &lt;span style="background-color:hsla(0,100%,50%,0.05)"&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;span style="color:#D20"&gt;WHERE u.id IN :userIds&lt;/span&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;/span&gt; ) .setParameter( &lt;span style="background-color:hsla(0,100%,50%,0.05)"&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;span style="color:#D20"&gt;date&lt;/span&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span style="color:#0a8;font-weight:bold"&gt;Timestamp&lt;/span&gt;.valueOf( &lt;span style="background-color:hsla(0,100%,50%,0.05)"&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;span style="color:#D20"&gt;2018-06-03 00:00:00&lt;/span&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;/span&gt; ) ) .setParameter( &lt;span style="background-color:hsla(0,100%,50%,0.05)"&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;span style="color:#D20"&gt;userIds&lt;/span&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span style="color:#0a8;font-weight:bold"&gt;Arrays&lt;/span&gt;.asList(&lt;span style="color:#00D"&gt;1L&lt;/span&gt;, &lt;span style="color:#00D"&gt;2L&lt;/span&gt;, &lt;span style="color:#00D"&gt;3L&lt;/span&gt; ) ) .executeUpdate(); assertEquals(&lt;span style="color:#00D"&gt;3&lt;/span&gt;, updateCount); }); } &lt;span style="color:#007"&gt;@Entity&lt;/span&gt;(name = &lt;span style="background-color:hsla(0,100%,50%,0.05)"&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;span style="color:#D20"&gt;Person&lt;/span&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span style="color:#007"&gt;@Inheritance&lt;/span&gt;(strategy = InheritanceType.JOINED) &lt;span style="color:#088;font-weight:bold"&gt;public&lt;/span&gt; &lt;span style="color:#088;font-weight:bold"&gt;static&lt;/span&gt; &lt;span style="color:#339;font-weight:bold"&gt;class&lt;/span&gt; &lt;span style="color:#B06;font-weight:bold"&gt;Person&lt;/span&gt; { &lt;span style="color:#007"&gt;@Id&lt;/span&gt; &lt;span style="color:#007"&gt;@GeneratedValue&lt;/span&gt; &lt;span style="color:#088;font-weight:bold"&gt;private&lt;/span&gt; &lt;span style="color:#0a8;font-weight:bold"&gt;Long&lt;/span&gt; id; &lt;span style="color:#088;font-weight:bold"&gt;private&lt;/span&gt; &lt;span style="color:#0a8;font-weight:bold"&gt;String&lt;/span&gt; name; &lt;span style="color:#088;font-weight:bold"&gt;private&lt;/span&gt; &lt;span style="color:#339;font-weight:bold"&gt;boolean&lt;/span&gt; employed; &lt;span style="color:#007"&gt;@Temporal&lt;/span&gt;( TemporalType.TIMESTAMP ) &lt;span style="color:#088;font-weight:bold"&gt;private&lt;/span&gt; &lt;span style="color:#0a8;font-weight:bold"&gt;Date&lt;/span&gt; employedOn; &lt;span style="color:#777"&gt;//Getters and setters omitted for brevity&lt;/span&gt; } &lt;span style="color:#007"&gt;@Entity&lt;/span&gt;(name = &lt;span style="background-color:hsla(0,100%,50%,0.05)"&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;span style="color:#D20"&gt;Doctor&lt;/span&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span style="color:#088;font-weight:bold"&gt;public&lt;/span&gt; &lt;span style="color:#088;font-weight:bold"&gt;static&lt;/span&gt; &lt;span style="color:#339;font-weight:bold"&gt;class&lt;/span&gt; &lt;span style="color:#B06;font-weight:bold"&gt;Doctor&lt;/span&gt; &lt;span style="color:#088;font-weight:bold"&gt;extends&lt;/span&gt; Person {} &lt;span style="color:#007"&gt;@Entity&lt;/span&gt;(name = &lt;span style="background-color:hsla(0,100%,50%,0.05)"&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;span style="color:#D20"&gt;Engineer&lt;/span&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span style="color:#088;font-weight:bold"&gt;public&lt;/span&gt; &lt;span style="color:#088;font-weight:bold"&gt;static&lt;/span&gt; &lt;span style="color:#339;font-weight:bold"&gt;class&lt;/span&gt; &lt;span style="color:#B06;font-weight:bold"&gt;Engineer&lt;/span&gt; &lt;span style="color:#088;font-weight:bold"&gt;extends&lt;/span&gt; Person { &lt;span style="color:#088;font-weight:bold"&gt;private&lt;/span&gt; &lt;span style="color:#339;font-weight:bold"&gt;boolean&lt;/span&gt; fellow; &lt;span style="color:#777"&gt;//Getters and setters omitted for brevity&lt;/span&gt; } }&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;There are several methods which we have overridden from the base class, like:&lt;/p&gt; &lt;/div&gt; &lt;div class="dlist"&gt; &lt;dl&gt; &lt;dt class="hdlist1"&gt;&lt;code&gt;getAnnotatedClasses&lt;/code&gt;&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;Which defines the entity classes we want this test case to use.&lt;/p&gt; &lt;/dd&gt; &lt;dt class="hdlist1"&gt;&lt;code&gt;addConfigOptions&lt;/code&gt;&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;Which defines the additional configuration properties we’d like to provide to Hibernate.&lt;/p&gt; &lt;/dd&gt; &lt;/dl&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The &lt;code&gt;setUp&lt;/code&gt; method uses the &lt;code&gt;@Before&lt;/code&gt; JUnit annotation, and so it will be called before every test execution.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The &lt;code&gt;testBulkUpdate&lt;/code&gt; method defines the test logic which replicates the Hibernate issue in question.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Notice the use of the &lt;code&gt;doInJPA&lt;/code&gt; methods which hide all the logic for creating an &lt;code&gt;EntityManager&lt;/code&gt;, starting a transaction, committing it and closing the &lt;code&gt;EntityManager&lt;/code&gt;.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;All you need to do is to provide the data access logic.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="committing-the-test-case"&gt;&lt;a class="anchor" href="#committing-the-test-case"&gt;&lt;/a&gt;Committing the test case&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Now, we can commit all changes:&lt;/p&gt; &lt;/div&gt; &lt;div class="listingblock"&gt; &lt;div class="content"&gt; &lt;pre class="CodeRay highlight"&gt;&lt;code data-lang="bash"&gt;git commit -am "HHH-12561 - bulk_id_strategy does not work with globally_quoted_identifiers"&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Next, we need to push the local branch to our fork:&lt;/p&gt; &lt;/div&gt; &lt;div class="listingblock"&gt; &lt;div class="content"&gt; &lt;pre class="CodeRay highlight"&gt;&lt;code data-lang="bash"&gt;git push origin HHH-12561&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Now, go to your &lt;code&gt;hibernate-orm&lt;/code&gt; fork page on GitHUb and press the &lt;code&gt;Compare and pull request&lt;/code&gt; button:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="http://in.relation.to/images/testcase/CompareAndPullRequest.png" alt="Compare and Pull Request, align=" width="center" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Now, add a commit message, choose the &lt;code&gt;JIRA issue Test Case&lt;/code&gt; label, and click the &lt;code&gt;Click Pull Request&lt;/code&gt; button:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="http://in.relation.to/images/testcase/OpenPullRequest.png" alt="Open Pull Request, align=" width="center" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;That’s it!&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;You’ve just submitted your test case to the &lt;code&gt;hibernate-orm&lt;/code&gt; project which can be integrated along with the fix.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="http://in.relation.to/images/testcase/PullRequests.png" alt="Pull Requests, align=" width="center" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="conclusion"&gt;&lt;a class="anchor" href="#conclusion"&gt;&lt;/a&gt;Conclusion&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;As you can see, providing a test case for the &lt;code&gt;hibernate-orm&lt;/code&gt; project as a GitHub Pull Request is even easier than working with the &lt;code&gt;hibernate-test-case-templates&lt;/code&gt;.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Therefore, if you spot a Hibernate issue, prior to creating the Hibernate JIRA issue, please provide a test case which reproduces the issue in question.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/nf1zqBu19TI" height="1" width="1" alt=""/&gt;</content><summary>A while ago, I wrote this article on the Hibernate blog which shows you how to create a test case which reproduces a certain Hibernate ORM issue. In the meanwhile, I came to realize that there is a much better way which I will explain in this article. The hibernate-test-case-templates drawbacks Although the hibernate-test-case-templates is much better than having to come up with your own test case...</summary><dc:creator>Vlad Mihalcea</dc:creator><dc:date>2018-06-04T00:00:00Z</dc:date><feedburner:origLink>http://in.relation.to/2018/06/04/best-way-write-hibernate-orm-issue-test-case/</feedburner:origLink></entry><entry><title>Configuring permissions using Elytron in WildFly 13</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/uqX68eW1SBc/configuring-permissions-using-elytron-in-wildfly-13" /><category term="Elytron" scheme="searchisko:content:tags" /><category term="feed_group_name_aggregated" scheme="searchisko:content:tags" /><category term="feed_name_fjuma" scheme="searchisko:content:tags" /><category term="permissions" scheme="searchisko:content:tags" /><category term="wildfly" scheme="searchisko:content:tags" /><author><name>Farah Juma</name></author><id>searchisko:content:id:jbossorg_blog-configuring_permissions_using_elytron_in_wildfly_13</id><updated>2018-06-01T19:08:02Z</updated><published>2018-06-01T19:08:02Z</published><content type="html">&lt;!-- [DocumentBodyStart:d722d955-214c-4e6d-835a-a054f8e6e0d1] --&gt;&lt;div class="jive-rendered-content"&gt;&lt;p&gt;With WildFly 13, there&amp;#8217;s a new way to configure permissions in the Elytron subsystem. In particular, it is now possible to configure permissions using a new &lt;span style="font-family: 'courier new', courier;"&gt;permission-set&lt;/span&gt; resource.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h2&gt;Configuring permission sets&lt;/h2&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;Adding a &lt;span style="font-family: 'courier new', courier;"&gt;permission-set&lt;/span&gt; takes the following general form:&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;!--[CodeBlockStart:d801ce18-df39-409b-9b6e-ffd6090d2a01][excluded]--&gt;&lt;pre class="plain" name="code"&gt;/subsystem=elytron/permission-set=MyPermissionSetName:add(permissions=[{class-name="...", module="...", target-name="...", action="..."}...])&lt;/pre&gt;&lt;!--[CodeBlockEnd:d801ce18-df39-409b-9b6e-ffd6090d2a01]--&gt;&lt;div style="display:none;"&gt;&lt;/div&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;In the above command, &lt;span style="font-family: 'courier new', courier;"&gt;permissions&lt;/span&gt; consists of a set of permissions, where each permission can have the following attributes:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;span style="font-family: 'courier new', courier;"&gt;class-name&lt;/span&gt; - the fully qualified class name of the permission (this is the only permission attribute that is required)&lt;/li&gt;&lt;li&gt;&lt;span style="font-family: 'courier new', courier;"&gt;module&lt;/span&gt; - the optional module to use to load the permission&lt;/li&gt;&lt;li&gt;&lt;span style="font-family: 'courier new', courier;"&gt;target-name&lt;/span&gt; - the optional target name to pass to the permission as it is constructed&lt;/li&gt;&lt;li&gt;&lt;span style="font-family: 'courier new', courier;"&gt;action&lt;/span&gt; - the optional action to pass to the permission as it is constructed&lt;/li&gt;&lt;/ul&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;After a &lt;span style="font-family: 'courier new', courier;"&gt;permission-set&lt;/span&gt; has been created, it can be referenced when creating a permission mapper in order to assign permissions to an identity.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h2&gt;Example configuration&lt;/h2&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;As an example, the following command can be used to add a new &lt;span style="font-family: 'courier new', courier;"&gt;permission-set&lt;/span&gt; that contains the &lt;span style="font-family: 'courier new', courier;"&gt;org.wildfly.security.auth.permission.RunAsPrincipalPermission&lt;/span&gt;:&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;!--[CodeBlockStart:9c261f89-dc4d-4264-9277-d5808860b200][excluded]--&gt;&lt;pre class="plain" name="code"&gt;/subsystem=elytron/permission-set=run-as-principal-permission:add(permissions=[{class-name="org.wildfly.security.auth.permission.RunAsPrincipalPermission", target-name="*"}])&lt;/pre&gt;&lt;!--[CodeBlockEnd:9c261f89-dc4d-4264-9277-d5808860b200]--&gt;&lt;div style="display:none;"&gt;&lt;/div&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;This results in the following configuration in the Elytron subsystem (note that the &lt;span style="font-family: 'courier new', courier;"&gt;login-permission&lt;/span&gt; and &lt;span style="font-family: 'courier new', courier;"&gt;default-permissions&lt;/span&gt; permission sets are already present in the default Elytron subsystem configuration):&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;!--[CodeBlockStart:172e8449-2620-42c1-a0a7-0511c83488fc][excluded]--&gt;&lt;pre class="xml" name="code"&gt;&amp;lt;subsystem xmlns="urn:wildfly:elytron:3.0" final-providers="combined-providers" disallowed-providers="OracleUcrypto"&amp;gt; ... &amp;#160;&amp;#160;&amp;#160; &amp;lt;permission-sets&amp;gt; &amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &amp;lt;permission-set name="login-permission"&amp;gt; &amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &amp;lt;permission class-name="org.wildfly.security.auth.permission.LoginPermission"/&amp;gt; &amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &amp;lt;/permission-set&amp;gt; &amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &amp;lt;permission-set name="default-permissions"&amp;gt; &amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &amp;lt;permission class-name="org.wildfly.extension.batch.jberet.deployment.BatchPermission" module="org.wildfly.extension.batch.jberet" target-name="*"/&amp;gt; &amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &amp;lt;permission class-name="org.wildfly.transaction.client.RemoteTransactionPermission" module="org.wildfly.transaction.client"/&amp;gt; &amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &amp;lt;permission class-name="org.jboss.ejb.client.RemoteEJBPermission" module="org.jboss.ejb-client"/&amp;gt; &amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &amp;lt;/permission-set&amp;gt; &amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &amp;lt;permission-set name="run-as-principal-permission"&amp;gt; &amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &amp;lt;permission class-name="org.wildfly.security.auth.permission.RunAsPrincipalPermission" target-name="*"/&amp;gt; &amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &amp;lt;/permission-set&amp;gt; &amp;#160;&amp;#160;&amp;#160; &amp;lt;/permission-sets&amp;gt; ... &amp;lt;/subsystem&amp;gt; &lt;/pre&gt;&lt;!--[CodeBlockEnd:172e8449-2620-42c1-a0a7-0511c83488fc]--&gt;&lt;div style="display:none;"&gt;&lt;/div&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;Next, create a simple permission mapper that references the newly created &lt;span style="font-family: 'courier new', courier;"&gt;run-as-principal-permission&lt;/span&gt; permission set:&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;!--[CodeBlockStart:a2aa7362-876b-48f3-8f5b-6603e42c9f8d][excluded]--&gt;&lt;pre class="plain" name="code"&gt;/subsystem=elytron/simple-permission-mapper=my-simple-permission-mapper:add(permission-mappings=[{principals=["anonymous"]}, \ {principals=["server1"], permission-sets=[{permission-set=login-permission}, {permission-set=default-permissions}, {permission-set=run-as-principal-permission}]}, \ {match-all=true,permission-sets=[{permission-set=login-permission}, {permission-set=default-permissions}]}])&lt;/pre&gt;&lt;!--[CodeBlockEnd:a2aa7362-876b-48f3-8f5b-6603e42c9f8d]--&gt;&lt;div style="display:none;"&gt;&lt;/div&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;This results in the following configuration in the Elytron subsystem:&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;!--[CodeBlockStart:4d9be248-5934-4dac-a045-bf9f0e0bd5fc][excluded]--&gt;&lt;pre class="xml" name="code"&gt;&amp;lt;subsystem xmlns="urn:wildfly:elytron:3.0" final-providers="combined-providers" disallowed-providers="OracleUcrypto"&amp;gt; ... &amp;#160;&amp;#160;&amp;#160; &amp;lt;mappers&amp;gt; &amp;#160;&amp;#160;&amp;#160; ... &amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &amp;lt;simple-permission-mapper name="my-simple-permission-mapper"&amp;gt; &amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &amp;lt;permission-mapping&amp;gt; &amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &amp;lt;principal name="anonymous"/&amp;gt; &amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &amp;lt;/permission-mapping&amp;gt; &amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &amp;lt;permission-mapping&amp;gt; &amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &amp;lt;principal name="server1"/&amp;gt; &amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &amp;lt;permission-set name="login-permission"/&amp;gt; &amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &amp;lt;permission-set name="default-permissions"/&amp;gt; &amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &amp;lt;permission-set name="run-as-principal-permission"/&amp;gt; &amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &amp;lt;/permission-mapping&amp;gt; &amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &amp;lt;permission-mapping match-all="true"&amp;gt; &amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &amp;lt;permission-set name="login-permission"/&amp;gt; &amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &amp;lt;permission-set name="default-permissions"/&amp;gt; &amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &amp;lt;/permission-mapping&amp;gt; &amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &amp;lt;/simple-permission-mapper&amp;gt; &amp;#160;&amp;#160;&amp;#160; ... &amp;#160;&amp;#160;&amp;#160; &amp;lt;/mappers&amp;gt; ... &amp;lt;/subsystem&amp;gt; &lt;/pre&gt;&lt;!--[CodeBlockEnd:4d9be248-5934-4dac-a045-bf9f0e0bd5fc]--&gt;&lt;div style="display:none;"&gt;&lt;/div&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;The above command creates a simple permission mapper that:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Assigns no permissions to an &lt;em&gt;anonymous&lt;/em&gt; user&lt;/li&gt;&lt;li&gt;Assigns the permissions referenced in the &lt;span style="font-family: 'courier new', courier;"&gt;login-permission&lt;/span&gt;, &lt;span style="font-family: 'courier new', courier;"&gt;default-permissions&lt;/span&gt;, and &lt;span style="font-family: 'courier new', courier;"&gt;run-as-principal-permission&lt;/span&gt; permission sets to the &lt;em&gt;server1&lt;/em&gt; user&lt;/li&gt;&lt;li&gt;Assigns the permissions referenced in the &lt;span style="font-family: 'courier new', courier;"&gt;login-permission&lt;/span&gt; and &lt;span style="font-family: 'courier new', courier;"&gt;default-permissions&lt;/span&gt; permission sets to all other users&lt;/li&gt;&lt;/ul&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h2&gt;Summary&lt;/h2&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;This blog post has given an overview of Elytron permission sets. For more information about the Elytron subsystem, check out the &lt;a class="jive-link-external-small" href="http://docs.wildfly.org/13/WildFly_Elytron_Security.html" rel="nofollow"&gt;Elytron documentation&lt;/a&gt;.&lt;/p&gt;&lt;/div&gt;&lt;!-- [DocumentBodyEnd:d722d955-214c-4e6d-835a-a054f8e6e0d1] --&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/uqX68eW1SBc" height="1" width="1" alt=""/&gt;</content><summary>With WildFly 13, there’s a new way to configure permissions in the Elytron subsystem. In particular, it is now possible to configure permissions using a new permission-set resource.   Configuring permission sets   Adding a permission-set takes the following general form:   /subsystem=elytron/permission-set=MyPermissionSetName:add(permissions=[{class-name="...", module="...", target-name="...", act...</summary><dc:creator>Farah Juma</dc:creator><dc:date>2018-06-01T19:08:02Z</dc:date><feedburner:origLink>https://developer.jboss.org/people/fjuma/blog/2018/06/01/configuring-permissions-using-elytron-in-wildfly-13</feedburner:origLink></entry><entry><title>What’s New in WildFly Management Console</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/WbrQ46fTeXY/" /><category term="feed_group_name_jbossas" scheme="searchisko:content:tags" /><category term="feed_name_wildfly" scheme="searchisko:content:tags" /><category term="hal" scheme="searchisko:content:tags" /><category term="wildfly" scheme="searchisko:content:tags" /><author><name>Harald Pehl</name></author><id>searchisko:content:id:jbossorg_blog-what_s_new_in_wildfly_management_console</id><updated>2018-06-01T18:00:00Z</updated><published>2018-06-01T18:00:00Z</published><content type="html">&lt;div id="preamble"&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;&lt;a href="http://wildfly.org/news/2018/05/30/WildFly13-Final-Released/"&gt;WildFly 13&lt;/a&gt; comes with a management console (HAL) which has been rewritten from scratch. HAL still uses a similar technical stack (GWT) and user experience, but now fully adopts &lt;a href="https://www.patternfly.org/"&gt;PatternFly&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;More important we enhanced the existing features and added support for many new subsystems and attributes. The following sections show some highlights of the latest version. For more details about the new features see the release notes for &lt;a href="https://hal.github.io/releases/3.0.0.final/"&gt;HAL 3.0.0.Final&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="_finder"&gt;Finder&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The column based navigation (finder) has been greatly improved. You can now use the cursor keys for navigation inside and across columns. To open an application view press ↵ (enter), to go back press ⌫ (backspace). Items in one column are now ordered alphabetically by default. You can pin frequently used items to stay at the top. Most columns offer a filter which can be used to quickly find the items you’re looking for. Finally the previews have been enriched and provide detailed documentation or the main attributes of the selected item. If appropriate the previews contain action links for the most common tasks.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="http://wildfly.org/images/hal/finder.png" alt="Finder" /&gt; &lt;/div&gt; &lt;div class="title"&gt;Figure 1. Finder&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="_applications"&gt;Applications&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Applications provide a new breadcrumb at the top to quickly switch between items of the same kind. More complex applications can include a vertical navigation. Finally most applications can be easily opened in an external window and provide an expert mode which uses the generic model browser.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="http://wildfly.org/images/hal/application.png" alt="Applications" /&gt; &lt;/div&gt; &lt;div class="title"&gt;Figure 2. Applications&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="_deployments"&gt;Deployments&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Many new features have been added to the deployment section:&lt;/p&gt; &lt;/div&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Use drag and drop to deploy artifacts&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Content browser with preview for text and images&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Create exploded deployments&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;CRUD support for exploded deployments:&lt;/p&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Add empty files&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Upload content&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Modify content&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Remove content&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Download complete deployments or deployment content&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="http://wildfly.org/images/hal/deployment.png" alt="Deployments" /&gt; &lt;/div&gt; &lt;div class="title"&gt;Figure 3. Deployments&lt;/div&gt; &lt;/div&gt; &lt;hr /&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="http://wildfly.org/images/hal/deployment-model.png" alt="Deployment Model" /&gt; &lt;/div&gt; &lt;div class="title"&gt;Figure 4. Deployment Model&lt;/div&gt; &lt;/div&gt; &lt;hr /&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="http://wildfly.org/images/hal/deployment-content.png" alt="Content Browser" /&gt; &lt;/div&gt; &lt;div class="title"&gt;Figure 5. Content Browser&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="_topology"&gt;Topology&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The topology view has been reintroduced to the management console. It was removed in the last versions due to performance issues with large domains. But thanks to new management operations, we were able to add this useful tool again.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="http://wildfly.org/images/hal/topology.png" alt="Topology" /&gt; &lt;/div&gt; &lt;div class="title"&gt;Figure 6. Topology&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="_runtime"&gt;Runtime&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The lifecycle operations for hosts, server groups and servers have been improved. New operations are available for hosts and disconnected hosts are now shown in the finder columns. For servers you can specify custom URLs which is extremely useful when running WildFly inside a docker container.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="http://wildfly.org/images/hal/runtime.png" alt="Runtime" /&gt; &lt;/div&gt; &lt;div class="title"&gt;Figure 7. Runtime&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="_monitor"&gt;Monitor&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The existing screens have been improved and many new subsystems have been added to the monitoring section. Some of the new and enhanced subsystems are:&lt;/p&gt; &lt;/div&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Batch&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;EJB&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;IO&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;JAX-RS&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Messaging&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Web (Undertow)&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="http://wildfly.org/images/hal/monitor-server.png" alt="Monitor Server" /&gt; &lt;/div&gt; &lt;div class="title"&gt;Figure 8. Monitor Server&lt;/div&gt; &lt;/div&gt; &lt;hr /&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="http://wildfly.org/images/hal/monitor-ejb.png" alt="EJB Subsystem" /&gt; &lt;/div&gt; &lt;div class="title"&gt;Figure 9. EJB Subsystem&lt;/div&gt; &lt;/div&gt; &lt;hr /&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="http://wildfly.org/images/hal/monitor-jaxrs.png" alt="JAX-RS Resources" /&gt; &lt;/div&gt; &lt;div class="title"&gt;Figure 10. JAX-RS Resources&lt;/div&gt; &lt;/div&gt; &lt;hr /&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="http://wildfly.org/images/hal/monitor-undertow.png" alt="Undertow Listener Statistics" /&gt; &lt;/div&gt; &lt;div class="title"&gt;Figure 11. Undertow Listener Statistics&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="_get_involved"&gt;Get Involved&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;If you want to learn more about HAL, head over to &lt;a href="https://hal.github.io/" class="bare"&gt;https://hal.github.io/&lt;/a&gt;. The new website contains both end user and technical documentation. Read about HAL’s architecture, building blocks and how you can build, run and debug the console. HAL is an open source project and we love to receive &lt;a href="https://hal.github.io/contribute/"&gt;contributions&lt;/a&gt; from our community — you!&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/WbrQ46fTeXY" height="1" width="1" alt=""/&gt;</content><summary>WildFly 13 comes with a management console (HAL) which has been rewritten from scratch. HAL still uses a similar technical stack (GWT) and user experience, but now fully adopts PatternFly. More important we enhanced the existing features and added support for many new subsystems and attributes. The following sections show some highlights of the latest version. For more details about the new featur...</summary><dc:creator>Harald Pehl</dc:creator><dc:date>2018-06-01T18:00:00Z</dc:date><feedburner:origLink>http://wildfly.org/news/2018/06/01/Whats-New-In-HAL/</feedburner:origLink></entry><entry><title>An Introduction to Red Hat Application Migration Toolkit</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/XjZh3wnZX4Q/" /><category term="Developer Tools" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="migration" scheme="searchisko:content:tags" /><category term="Red Hat Application Migration Toolkit" scheme="searchisko:content:tags" /><category term="Red Hat Application Migration Toolset" scheme="searchisko:content:tags" /><category term="Windup" scheme="searchisko:content:tags" /><author><name>Christian Huffman</name></author><id>searchisko:content:id:jbossorg_blog-an_introduction_to_red_hat_application_migration_toolkit</id><updated>2018-06-01T16:00:06Z</updated><published>2018-06-01T16:00:06Z</published><content type="html">&lt;p&gt;[In case you aren&amp;#8217;t following the &lt;a href="https://middlewareblog.redhat.com/"&gt;Red Hat JBoss Middleware blog&lt;/a&gt;, we are reposting &lt;a href="https://middlewareblog.redhat.com/2018/05/24/an-introduction-to-red-hat-application-migration-toolkit/"&gt;An Introduction to Red Hat Application Migration Toolkit&lt;/a&gt; on developers.redhat.com.]&lt;/p&gt; &lt;p&gt;Application migration and modernization can be a daunting task. Not only do you have to update legacy applications with newer libraries and APIs, but often you must also address new frameworks, infrastructures, and architectures all while simultaneously keeping resources dedicated to new features and versions.&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/products/rhamt/overview/"&gt;Red Hat Application Migration Toolkit&lt;/a&gt; (RHAMT), formerly known as Windup, provides a set of utilities for easing this process. Applications can be analyzed through a command-line interface (CLI), through a web-based interface, or directly inside Eclipse, allowing immediate modification of the source code.&lt;/p&gt; &lt;p&gt;These utilities allow you to quickly gain insights into thousands of your applications simultaneously. They identify migration challenges and code or dependencies shared between applications, and they accelerate making the necessary code changes to have your applications run in the latest middleware platforms.&lt;/p&gt; &lt;p&gt;&lt;span id="more-498977"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;Choosing the Right Distribution&lt;/h2&gt; &lt;p&gt;You’ve read the introduction, possibly seen a video, and are eager to run your first application through the process. Where do you begin?&lt;/p&gt; &lt;p&gt;RHAMT provides a number of different distributions to meet your needs, and all include detailed reports that highlight migration issues with effort estimation. Each of these is summarized below.&lt;/p&gt; &lt;h2&gt;CLI&lt;/h2&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/download-manager/file/migrationtoolkit-rhamt-cli-4.0.1-offline.zip?sc_cid=7016000000154B7AAI"&gt;CLI Download&lt;/a&gt; – &lt;a href="https://access.redhat.com/documentation/en-us/red_hat_application_migration_toolkit/4.0/html-single/cli_guide/?sc_cid=7016000000154B7AAI"&gt;Product Documentation&lt;/a&gt;&lt;/p&gt; &lt;p&gt;The CLI is a command-line tool that provides access to the reports without the overhead of the other tools. It includes a wide array of customization options, and it allows you to finely tune the RHAMT analysis options or integrate with external automation tools.&lt;/p&gt; &lt;h2&gt;Web Console&lt;/h2&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/download-manager/file/migrationtoolkit-rhamt-web-distribution-4.0.1-with-authentication.zip?sc_cid=7016000000154B7AAI"&gt;Web Console Download&lt;/a&gt; – &lt;a href="https://access.redhat.com/documentation/en-us/red_hat_application_migration_toolkit/4.0/html-single/web_console_guide/?sc_cid=7016000000154B7AAI"&gt;Product Documentation&lt;/a&gt;&lt;/p&gt; &lt;p&gt;The web console is a web-based system that allows a team of users to assess and prioritize migration and modernization efforts. In addition, applications can be grouped into projects for analysis.&lt;/p&gt; &lt;h2&gt;Eclipse Plug-in&lt;/h2&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/download-manager/file/migrationtoolkit-rhamt-eclipse-plugin-repository-4.0.1.zip?sc_cid=7016000000154B7AAI"&gt;Eclipse Plug-in Download&lt;/a&gt; – &lt;a href="https://access.redhat.com/documentation/en-us/red_hat_application_migration_toolkit/4.0/html-single/eclipse_plugin_guide/?sc_cid=7016000000154B7AAI"&gt;Product Documentation&lt;/a&gt;&lt;/p&gt; &lt;p&gt;The Eclipse plug-in provides assistance directly in Eclipse and Red Hat JBoss Developer Studio (JBDS), and it allows developers to see migration issues directly in the source code. The Eclipse plug-in also provides guidance on resolving issues and offers automatic code replacement where possible.&lt;/p&gt; &lt;h2&gt;Start by Choosing a Distribution&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;If you’re working on a team that needs concurrent access to the reports, or you have a large number of applications to analyze, then choose the web console.&lt;/li&gt; &lt;li&gt;If you’re a developer familiar with Eclipse or JBDS and want live feedback, then start with the Eclipse plug-in.&lt;/li&gt; &lt;li&gt;Otherwise, we recommend starting with the CLI.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Follow the download link for the chosen distribution, and then examine the first few chapters in the appropriate guide to install and run the tool.&lt;/p&gt; &lt;h1&gt;Analyzing an Application&lt;/h1&gt; &lt;p&gt;Assume you have a local installation of RHAMT, located at RHAMT_HOME, and an application you want to analyze. For the purposes of this blog, we’ll also assume that you chose the CLI. With that out of the way, let’s get started.&lt;/p&gt; &lt;p&gt;The analysis is performed by calling &lt;code&gt;rhamt-cli&lt;/code&gt; and passing it in the application along with any desired options, as seen in the following example.&lt;/p&gt; &lt;pre&gt;$ bin/rhamt-cli --sourceMode --input /path/to/source_folder/ --output /path/to/output_folder/ --target eap7&lt;/pre&gt; &lt;p&gt;The options are straightforward:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;–sourceMode&lt;/code&gt; indicates the input files are source files instead of compiled binaries.&lt;/li&gt; &lt;li&gt;&lt;code&gt;–input&lt;/code&gt; specifies the path to the file or directory containing the files to be analyzed.&lt;/li&gt; &lt;li&gt;&lt;code&gt;–output&lt;/code&gt; specifies the path to the directory to contain the reports.&lt;/li&gt; &lt;li&gt;&lt;code&gt;–target&lt;/code&gt; specifies the technology to migrate to; it is used to determine the rules for the analysis.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Once the analysis finishes, a message will be seen in the console indicating the path to the report.&lt;/p&gt; &lt;p&gt;&lt;code&gt;Report created: /path/to/output_folder/index.html&lt;br /&gt; Access it at this URL: file:///path/to/output_folder/index.html&lt;/code&gt;&lt;/p&gt; &lt;h1&gt;Rules&lt;/h1&gt; &lt;p&gt;All of RHAMT’s distributions utilize the same rules engine to analyze the APIs, technologies, and architectures used by the application you plan to migrate. This engine extracts files from archives, decompiles classes, scans and classifies file types, analyzes XML and other file content, analyzes application code, and then generates the reports.&lt;/p&gt; &lt;p&gt;Each of these actions is handled by defined rules, which consist of a set of actions to perform once conditions are met. We’ll look more in-depth at how rules work and at creating your own custom rules in a subsequent post, but for now, know that RHAMT includes a comprehensive set of standard migration rules to get you started.&lt;/p&gt; &lt;h1&gt;Just Want to &amp;#8220;Lift and Shift&amp;#8221;?&lt;/h1&gt; &lt;p&gt;Lifting and shifting, or &lt;i&gt;rehosting&lt;/i&gt;, an application is one possible first step in migrating it. This process involves moving the application onto a different target runtime or infrastructure. A common end goal of this stage is to make the smallest number of changes to have the application running successfully in a cloud environment.&lt;/p&gt; &lt;p&gt;Once the application is successfully running in the cloud, the next step is to modernize the application so that it’s natively designed for a cloud environment. Instead of simply rehosting the application, this step involves redesigning it, moving unnecessary dependencies and libraries outside the application.&lt;/p&gt; &lt;p&gt;Regardless of which step you’re at, RHAMT assists with both of these steps by providing a set of cloud-ready rules. Once executed against the application, a detailed report is created that indicates what changes should be made. For anyone familiar with using RHAMT to migrate middleware platforms, the process is similar: examine the report and adjust your application based on the feedback.&lt;/p&gt; &lt;p&gt;It’s that simple.&lt;/p&gt; &lt;h1&gt;Summary&lt;/h1&gt; &lt;p&gt;Wherever you are in the migration process, I’d recommend looking at RHAMT. It’s extremely simple to set up, and it comes with a number of default rules to assist in any part of the migration and modernization process. In addition, RHAMT facilitates solving unique problems once; after a given solution has been identified, a custom rule can be created to capture that solution, vastly simplifying the migration process.&lt;/p&gt; &lt;p&gt;Stay tuned for our next update, where we discuss how to create custom rules to better utilize RHAMT in your environment.&lt;/p&gt; &lt;h1&gt;References&lt;/h1&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/products/rhamt/overview/?sc_cid=7016000000154B7AAI"&gt;Red Hat Application Migration Toolkit&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://access.redhat.com/documentation/en-us/red_hat_application_migration_toolkit/?sc_cid=7016000000154B7AAI"&gt;Product Documentation for Red Hat Application Migration Toolkit&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F01%2Fan-introduction-to-red-hat-application-migration-toolkit%2F&amp;#38;linkname=An%20Introduction%20to%20Red%20Hat%20Application%20Migration%20Toolkit" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F01%2Fan-introduction-to-red-hat-application-migration-toolkit%2F&amp;#38;linkname=An%20Introduction%20to%20Red%20Hat%20Application%20Migration%20Toolkit" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F01%2Fan-introduction-to-red-hat-application-migration-toolkit%2F&amp;#38;linkname=An%20Introduction%20to%20Red%20Hat%20Application%20Migration%20Toolkit" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F01%2Fan-introduction-to-red-hat-application-migration-toolkit%2F&amp;#38;linkname=An%20Introduction%20to%20Red%20Hat%20Application%20Migration%20Toolkit" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F01%2Fan-introduction-to-red-hat-application-migration-toolkit%2F&amp;#38;linkname=An%20Introduction%20to%20Red%20Hat%20Application%20Migration%20Toolkit" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F01%2Fan-introduction-to-red-hat-application-migration-toolkit%2F&amp;#38;linkname=An%20Introduction%20to%20Red%20Hat%20Application%20Migration%20Toolkit" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F01%2Fan-introduction-to-red-hat-application-migration-toolkit%2F&amp;#38;linkname=An%20Introduction%20to%20Red%20Hat%20Application%20Migration%20Toolkit" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F01%2Fan-introduction-to-red-hat-application-migration-toolkit%2F&amp;#38;linkname=An%20Introduction%20to%20Red%20Hat%20Application%20Migration%20Toolkit" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F01%2Fan-introduction-to-red-hat-application-migration-toolkit%2F&amp;#38;title=An%20Introduction%20to%20Red%20Hat%20Application%20Migration%20Toolkit" data-a2a-url="https://developers.redhat.com/blog/2018/06/01/an-introduction-to-red-hat-application-migration-toolkit/" data-a2a-title="An Introduction to Red Hat Application Migration Toolkit"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/06/01/an-introduction-to-red-hat-application-migration-toolkit/"&gt;An Introduction to Red Hat Application Migration Toolkit&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/XjZh3wnZX4Q" height="1" width="1" alt=""/&gt;</content><summary>[In case you aren’t following the Red Hat JBoss Middleware blog, we are reposting An Introduction to Red Hat Application Migration Toolkit on developers.redhat.com.] Application migration and modernization can be a daunting task. Not only do you have to update legacy applications with newer libraries and APIs, but often you must also address new frameworks, infrastructures, and architectures all w...</summary><dc:creator>Christian Huffman</dc:creator><dc:date>2018-06-01T16:00:06Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/06/01/an-introduction-to-red-hat-application-migration-toolkit/</feedburner:origLink></entry><entry><title>Shift Developer Conference 2018 - How to Jump Start a Career in Open Source (slides)</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/Xl6KLpmXi6o/shift-dev-2018-howto-jump-start-career-in-opensource-slides.html" /><category term="conference" scheme="searchisko:content:tags" /><category term="feed_group_name_global" scheme="searchisko:content:tags" /><category term="feed_name_ericschabell" scheme="searchisko:content:tags" /><category term="JBoss" scheme="searchisko:content:tags" /><author><name>Eric D. Schabell</name></author><id>searchisko:content:id:jbossorg_blog-shift_developer_conference_2018_how_to_jump_start_a_career_in_open_source_slides</id><updated>2018-06-01T17:44:04Z</updated><published>2018-06-01T15:00:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;a href="https://4.bp.blogspot.com/-CNelZrWyTIc/WxArd9Dlp3I/AAAAAAAAsro/-bwJNOsm-NAIiTVbfde9RKM7CEblZUQfgCLcBGAs/s1600/shiftdev2018.png" imageanchor="1" style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em;"&gt;&lt;img alt="shift developer" border="0" data-original-height="530" data-original-width="967" height="175" src="https://4.bp.blogspot.com/-CNelZrWyTIc/WxArd9Dlp3I/AAAAAAAAsro/-bwJNOsm-NAIiTVbfde9RKM7CEblZUQfgCLcBGAs/s320/shiftdev2018.png" title="" width="320" /&gt;&lt;/a&gt;&lt;br /&gt;As &lt;a href="http://www.schabell.org/2018/05/shift-dev-2018-howto-jump-start-career-in-opensource.html" target="_blank"&gt;previously posted&lt;/a&gt;, I spent this week at the largest developer conference in Southeast Europe, known as the Shift Developer Conference 2018.&lt;br /&gt;&lt;br /&gt;I gave a talk on the soft skill side of development, suggesting some ways to jump start a career in open source. I did not mention coding, pull requests or even suggest to join a coding project. It's more subtle than the obvious components one would expect in such a topic.&lt;br /&gt;&lt;br /&gt;My career in open source has been a long one and I think I've got a few good tips, tricks and pieces of advice based on what's worked on this long and wonderful journey.&lt;br /&gt;&lt;br /&gt;Take a look at the slides, see if you can find a way to jump start your career in open source?&lt;br /&gt;&lt;a name='more'&gt;&lt;/a&gt;&lt;br /&gt;As a bit of a review, the abstract:&lt;br /&gt;&lt;br /&gt;&lt;h3 style="text-align: left;"&gt;&lt;a href="https://shiftconf.co/#schedule" target="_blank"&gt;How To Jump Start a Career in Open Source&lt;/a&gt;&lt;/h3&gt;&lt;i&gt;It's not magic. It's not luck. It's not going to happen by itself, so what's the secret sauce? Understanding what makes a career in open source grow, what choices are crucial, and what actions accelerate or damage your open source future are sometimes hard to grasp. Learning to position, expand and grow your personal brand in the open source world is what this session provides. Be ready for your next step in open source. Join me for an hour of power where you'll be given a clear and easy to use plan for jump starting your open source career immediately.&lt;/i&gt;&lt;br /&gt;&lt;br /&gt;And the slides:&lt;br /&gt;&lt;br /&gt;&lt;div align="center"&gt;&lt;iframe allowfullscreen="" frameborder="0" height="420" marginheight="0" marginwidth="0" scrolling="no" src="//www.slideshare.net/slideshow/embed_code/key/DBg9ePKP1x4rQ9" style="border-width: 1px; border: 1px solid #ccc; margin-bottom: 5px; max-width: 100%;" width="510"&gt; &lt;/iframe&gt;&lt;/div&gt;&lt;br /&gt;Hope you enjoyed the talk, see you again next time!&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="feedflare"&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=a8xyzgebtIU:I31Z2o-VTms:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=a8xyzgebtIU:I31Z2o-VTms:63t7Ie-LG7Y"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=63t7Ie-LG7Y" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=a8xyzgebtIU:I31Z2o-VTms:4cEx4HpKnUU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=a8xyzgebtIU:I31Z2o-VTms:4cEx4HpKnUU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=a8xyzgebtIU:I31Z2o-VTms:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=a8xyzgebtIU:I31Z2o-VTms:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=a8xyzgebtIU:I31Z2o-VTms:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=a8xyzgebtIU:I31Z2o-VTms:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=a8xyzgebtIU:I31Z2o-VTms:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=a8xyzgebtIU:I31Z2o-VTms:gIN9vFwOqvQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=a8xyzgebtIU:I31Z2o-VTms:gIN9vFwOqvQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/schabell/jboss/~4/a8xyzgebtIU" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/Xl6KLpmXi6o" height="1" width="1" alt=""/&gt;</content><summary>As previously posted, I spent this week at the largest developer conference in Southeast Europe, known as the Shift Developer Conference 2018. I gave a talk on the soft skill side of development, suggesting some ways to jump start a career in open source. I did not mention coding, pull requests or even suggest to join a coding project. It's more subtle than the obvious components one would expect ...</summary><dc:creator>Eric D. Schabell</dc:creator><dc:date>2018-06-01T15:00:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/schabell/jboss/~3/a8xyzgebtIU/shift-dev-2018-howto-jump-start-career-in-opensource-slides.html</feedburner:origLink></entry><entry><title>This week in JBoss (31 May 2018)</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/SdTsH85GTlE/this-week-in-jboss-31-may-2018" /><category term="feed_group_name_global" scheme="searchisko:content:tags" /><category term="feed_name_weeklyeditorial" scheme="searchisko:content:tags" /><category term="hibernate-orm" scheme="searchisko:content:tags" /><category term="hibernate-search" scheme="searchisko:content:tags" /><category term="jboss weekly" scheme="searchisko:content:tags" /><category term="weekly_editorial" scheme="searchisko:content:tags" /><category term="wildfly" scheme="searchisko:content:tags" /><author><name>Jason Porter</name></author><id>searchisko:content:id:jbossorg_blog-this_week_in_jboss_31_may_2018</id><updated>2018-05-31T23:21:44Z</updated><published>2018-05-31T23:21:44Z</published><content type="html">&lt;!-- [DocumentBodyStart:97ded28c-1736-422a-a2c6-907f2e2cee69] --&gt;&lt;div class="jive-rendered-content"&gt;&lt;div&gt;&lt;div&gt;&lt;div class="sectionbody"&gt;&lt;div class="paragraph"&gt;&lt;p&gt;This is a smaller editorial this week, but by no means does that mean we haven&amp;#8217;t been busy!&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="sect1"&gt;&lt;h2&gt;Releases&lt;/h2&gt;&lt;div class="sectionbody"&gt;&lt;div class="ulist"&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;a class="jive-link-external-small" href="http://in.relation.to/2018/05/28/hibernate-orm-531-final-release/" rel="nofollow"&gt;Hibernate 5.3.1&lt;/a&gt; is the first bug-fix release for Hibernate 5.3, a JPA 2.2 implementation.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;a class="jive-link-external-small" href="http://in.relation.to/2018/05/29/hibernate-search-5-10-1-Final-5-9-2-Final-5-6-5-Final/" rel="nofollow"&gt;Hibernate Search triple release&lt;/a&gt;: 5.10.1.Final, 5.9.2.Final, and 5.6.5.Final&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;a class="jive-link-external-small" href="http://wildfly.org/news/2018/05/30/WildFly13-Final-Released/" rel="nofollow"&gt;Wildfly 13 Baker&amp;#8217;s Dozen&lt;/a&gt; brings Java EE 8 feature completeness! Look for Wildfly 14 to bring full Java EE 8 certification.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="sect1"&gt;&lt;h2&gt;Blogs&lt;/h2&gt;&lt;div class="sectionbody"&gt;&lt;div class="ulist"&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;a class="jive-link-external-small" href="https://middlewareblog.redhat.com/2018/05/24/an-introduction-to-red-hat-application-migration-toolkit/" rel="nofollow"&gt;Introduction to Red Hat Application Migration Toolkit&lt;/a&gt;. Christian Huffman explores RHAMT and explains how to get started with it to help you migrate your application to Red Hat Enterprise Application Platform.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Doug Tidwell did a great explanation about creating production-ready containers, read the blog at &lt;a class="jive-link-external-small" href="https://developers.redhat.com/blog/2018/05/31/red-hat-summit-building-production-ready-containers/" rel="nofollow"&gt;https://developers.redhat.com/blog/2018/05/31/red-hat-summit-building-production-ready-containers/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Matthias Wessendorf introduces the new &lt;a class="jive-link-external-small" href="https://developers.redhat.com/blog/2018/05/31/introducing-the-kafka-cdi-library/" rel="nofollow"&gt;Kafka CDI Library&lt;/a&gt; over at the Red Hat Developers Blog. This looks like it will be a great library for doing Kafka events with CDI!&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;div class="paragraph"&gt;&lt;p&gt;As stated, this was a smaller one this week, but still, some great stuff happening! Everyone have a happy summer!&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;!-- [DocumentBodyEnd:97ded28c-1736-422a-a2c6-907f2e2cee69] --&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/SdTsH85GTlE" height="1" width="1" alt=""/&gt;</content><summary>This is a smaller editorial this week, but by no means does that mean we haven’t been busy! Releases Hibernate 5.3.1 is the first bug-fix release for Hibernate 5.3, a JPA 2.2 implementation. Hibernate Search triple release: 5.10.1.Final, 5.9.2.Final, and 5.6.5.Final Wildfly 13 Baker’s Dozen brings Java EE 8 feature completeness! Look for Wildfly 14 to bring full Java EE 8 certification. Blogs Intr...</summary><dc:creator>Jason Porter</dc:creator><dc:date>2018-05-31T23:21:44Z</dc:date><feedburner:origLink>https://developer.jboss.org/blogs/weekly-editorial/2018/05/31/this-week-in-jboss-31-may-2018</feedburner:origLink></entry><entry><title>Red Hat Summit: Building production-ready containers</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/ayWrMJ1HgEw/" /><category term="Containers" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Red Hat OpenShift Container Platform" scheme="searchisko:content:tags" /><category term="red hat summit" scheme="searchisko:content:tags" /><author><name>Doug Tidwell</name></author><id>searchisko:content:id:jbossorg_blog-red_hat_summit_building_production_ready_containers</id><updated>2018-05-31T15:00:00Z</updated><published>2018-05-31T15:00:00Z</published><content type="html">&lt;p&gt;Bringing excitement to the last session on the last day of the show, Scott McCarty and Ben Breard wrapped up this year&amp;#8217;s Red Hat Summit with a discussion of best practices for production-ready containers.&lt;/p&gt; &lt;p&gt;In the container era, Scott pointed out there are four building blocks you need to think about:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Container images&lt;/li&gt; &lt;li&gt;Container hosts&lt;/li&gt; &lt;li&gt;Container orchestration&lt;/li&gt; &lt;li&gt;Registry servers&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Each of these topics is a huge rabbit hole you can go down if you want to really learn all there is to know about them. As you&amp;#8217;d expect from the session title, Scott and Ben focused on container images. Despite that, you still have to consider the other three. How will your images interact with others? How will you get data to them? How will they interact with each other? Will you embed passwords in your images? (Spoiler alert: &lt;em&gt;No.&lt;/em&gt;) You need to take all of these things into consideration as you move into the world of containers.&lt;/p&gt; &lt;p&gt;A single container is about as useful as a single Lego block&lt;a href="#link1"&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt;. You need to tie lots of them together in interesting ways to get the full power of containers behind you. Scott quoted Red Hat&amp;#8217;s Ryan Hallisey:&lt;/p&gt; &lt;blockquote&gt;&lt;p&gt;Using containers is as much of a business advantage as a technical one. When building and using containers, layering is crucial. You need to look at your application and think about each of the pieces and how they work together–similar to the way you can break a program up into classes and functions.&lt;/p&gt;&lt;/blockquote&gt; &lt;p&gt;If you&amp;#8217;re building a Lego model, you take an instruction sheet and a set of building blocks and create something from them. In the world of containers, you take instructions (YAML) and building blocks (images) and create an application from them.&lt;/p&gt; &lt;p&gt;The goal of the &lt;a href="https://www.opencontainers.org"&gt;Open Container Initiative (OCI)&lt;/a&gt; is to define standards for containers and runtimes. (Members include Red Hat, CoreOS, and pretty much every other player in the industry.) If you&amp;#8217;re an architect, OCI protects your investment because you can create images once and know you can use them for the foreseeable future&lt;a href="#link2"&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt; and know that the tooling and the distribution and logistics mechanisms and the registry server will still exist and will still work.&lt;/p&gt; &lt;p&gt;As the old joke goes, the great thing about standards is that you have so many to choose from&lt;a href="#link3"&gt;&lt;sup&gt;3&lt;/sup&gt;&lt;/a&gt;. Scott mentioned five relevant standards that are being driven by vendors, communities, and standards bodies:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;The &lt;a href="https://github.com/opencontainers/image-spec"&gt;OCI Image Specification&lt;/a&gt;&lt;/li&gt; &lt;li&gt;The &lt;a href="https://github.com/opencontainers/distribution-spec"&gt;OCI Distribution Specification&lt;/a&gt;&lt;/li&gt; &lt;li&gt;The &lt;a href="https://github.com/opencontainers/runtime-spec"&gt;OCI Runtime Specification&lt;/a&gt;&lt;/li&gt; &lt;li&gt;The &lt;a href="https://github.com/kubernetes/kubernetes/blob/242a97307b34076d5d8f5bbeb154fa4d97c9ef1d/docs/devel/container-runtime-interface.md"&gt;Container Runtime Interface&lt;/a&gt; (from Kubernetes)&lt;/li&gt; &lt;li&gt;The &lt;a href="https://www.cncf.io/blog/2017/05/23/cncf-hosts-container-networking-interface-cni/"&gt;Container Network Interface&lt;/a&gt; (from the Cloud Native Computing Foundation)&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;When you&amp;#8217;re running a container, there&amp;#8217;s an image, there&amp;#8217;s a registry, and there&amp;#8217;s a host. With the Distribution spec, you&amp;#8217;re protected if you put your images in an Amazon registry, an Azure registry, a Red Hat-provided registry, etc. You can move that image around and run it in another environment.&lt;/p&gt; &lt;p&gt;Scott mentioned a number of tools that are emerging as the standards become more entrenched. The community created &lt;a href="https://github.com/kubernetes-incubator/cri-tools"&gt;crictl&lt;/a&gt; for the CRI standard. &lt;a href="https://www.projectatomic.io/blog/2018/02/reintroduction-podman/"&gt;Podman&lt;/a&gt; (&lt;a href="https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux_atomic_host/7/html/release_notes/technology_previews"&gt;now available as a tech preview&lt;/a&gt;) offers an experience similar to the Docker command line. &lt;a href="https://github.com/opencontainers/runc"&gt;runc&lt;/a&gt; is a command-line tool to run containers according to the OCI runtime spec. Project Atomic created the &lt;a href="https://www.projectatomic.io/blog/2017/11/getting-started-with-buildah/"&gt;Buildah&lt;/a&gt; tool to build OCI-compliant images. What&amp;#8217;s great about Buildah is that it will work with your &lt;code&gt;Dockerfile&lt;/code&gt;s. Buildah lets you add packages into the image when you build it, so that your final container doesn&amp;#8217;t have to have a package manager. And of course you can use these tools in a toolchain.&lt;/p&gt; &lt;p&gt;Scott made the point that the Docker commands related to images actually work with repositories, not images. For example, this command:&lt;/p&gt; &lt;blockquote&gt;&lt;p&gt;&lt;code&gt;docker pull registry.access.redhat.com/rhel7/rhel:latest&lt;/code&gt;&lt;/p&gt;&lt;/blockquote&gt; &lt;p&gt;goes to the registry at &lt;code&gt;registry.access.redhat.com&lt;/code&gt;, then looks in the &lt;code&gt;rhel7&lt;/code&gt; namespace, then looks for an image named &lt;code&gt;rhel&lt;/code&gt;, then takes the version of that image with the tag &lt;code&gt;latest&lt;/code&gt;&lt;a href="#link4"&gt;&lt;sup&gt;4&lt;/sup&gt;&lt;/a&gt;. The hierarchy here is &lt;code&gt;registry server/namespace/repo:tag&lt;/code&gt;. The registry server is resolved by DNS, but the namespace can mean different things depending on the registry server. At &lt;code&gt;registry.access.redhat.com&lt;/code&gt;, the namespace is the product name. At Dockerhub, the namespace is the name of the user who committed the image. In creating images in your own registry, it&amp;#8217;s important to think through what the different components of the name mean. How will your organization use namespaces? How will you name your repos? (A bit of advice from Scott: always use the full URL of the image in your &lt;code&gt;Dockerfile&lt;/code&gt; to make sure you&amp;#8217;re getting exactly what you expect.)&lt;/p&gt; &lt;p&gt;Next Ben took over to discuss his tenets for building images. He stressed that you should use source control for everything so that all of your artifacts are buildable from code. His five basic principles for building production-ready containers are:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Standardize&lt;/li&gt; &lt;li&gt;Minimize storage&lt;/li&gt; &lt;li&gt;Delegate&lt;/li&gt; &lt;li&gt;Process&lt;/li&gt; &lt;li&gt;Iterate&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;We&amp;#8217;ll discuss these over the next few paragraphs.&lt;/p&gt; &lt;p&gt;&lt;em&gt;Standardize:&lt;/em&gt; Your goal should be to have a standard set of images with a common lineage. Your base images will be things like application frameworks, app servers, and databases and other middleware. The obvious benefits here are that your images are easier to scale, reuse of common layers is maximized, and the differences between environments in your various containers are minimized. The size of registries can be a problem, especially with thousands of developers constantly cranking out images as toolchains and build pipelines do their magic. Standardizing on as few images as possible has huge benefits in your registry, at runtime, and whenever you need to update a base image. (Red Hat encourages you to use our base images, especially the LTS images.)&lt;/p&gt; &lt;p&gt;&lt;em&gt;Minimize storage:&lt;/em&gt; The goal is to limit the content in a given image, particularly a base image, so that it only has what you&amp;#8217;re using. Red Hat provides an image named &lt;a href="https://access.redhat.com/containers/?tab=overview#/registry.access.redhat.com/rhel7-atomic"&gt;rhel7-atomic&lt;/a&gt; (not to be confused with &lt;a href="https://www.projectatomic.io"&gt;Project Atomic&lt;/a&gt;). This image has &lt;code&gt;glibc&lt;/code&gt; and just enough &lt;code&gt;rpm&lt;/code&gt; to add packages. There is no &lt;code&gt;python&lt;/code&gt;, no &lt;code&gt;systemd&lt;/code&gt;, or similar things that you probably don&amp;#8217;t need. Remember, with an image, you&amp;#8217;re building a sandbox. If your sandbox is the size of a stadium parking lot, it&amp;#8217;s not a sandbox anymore.&lt;/p&gt; &lt;p&gt;&lt;em&gt;Delegate:&lt;/em&gt; Ownership of an image should lie with the people who have the most expertise for that image, whatever it contains. Don&amp;#8217;t be a hero; don&amp;#8217;t be responsible for every image in your organization. Leverage your team&amp;#8217;s skills.&lt;/p&gt; &lt;p&gt;&lt;em&gt;Focus on process and automation:&lt;/em&gt; This is the most important rule. The barrier to getting started with containers is really low. It&amp;#8217;s not that much trouble to create a &lt;code&gt;Dockerfile&lt;/code&gt; and run &lt;code&gt;docker build&lt;/code&gt;. That means it&amp;#8217;s simple to do something once and never think about it again. But containers are not &amp;#8220;fire and forget.&amp;#8221; You need process around them for everything from testing to deployment to security. Ben mentioned tools like &lt;a href="https://www.open-scap.org"&gt;OpenSCAP&lt;/a&gt; and &lt;a href="https://coreos.com/clair/docs/latest/"&gt;Clair&lt;/a&gt; that can scan your images for vulnerabilities.&lt;a href="#link5"&gt;&lt;sup&gt;5&lt;/sup&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;em&gt;Iterate&lt;/em&gt; is the final goal. Don&amp;#8217;t repeat the mistakes of the past. Making changes is no longer a big deal. If you have testing and security scanning as part of your build chain, then you go from &amp;#8220;known good&amp;#8221; to &amp;#8220;known good&amp;#8221; every single time.&lt;/p&gt; &lt;p&gt;The image a developer has on her laptop should be the same as the image in the dev/test environment, which should be the same as the image in production in the cloud. (BTW, the term &amp;#8220;developer&amp;#8221; here really means &amp;#8220;anybody who builds an image.&amp;#8221; That could include sys admins or architects or others.) As you distribute an image, the YAML file that defines persistent volumes, secrets, scaling policies, and other metadata should go along with it as well.&lt;/p&gt; &lt;p&gt;Finally, Ben made the point that you need to be building images in a system that has a pipeline. You can build images on your local machine for &lt;a href="https://en.wikipedia.org/wiki/Smoke_testing_(software)"&gt;smoke testing&lt;/a&gt;, but any changes that are significant should be run through the pipeline. It&amp;#8217;s crucial to remember that you can&amp;#8217;t just fire up Docker on a laptop and test your image. To do test anything significant, you&amp;#8217;ll need an environment that can start a Kubernetes cluster, pull down all the images that run together in production, and then start the pipeline. Nobody wants to run a whole orchestrated system on their laptops, but that&amp;#8217;s the only way you can reliably test a set of services that work together.&lt;/p&gt; &lt;p&gt;The hallmark of a great piece of code is not just that it works, but that its architecture is elegant, intuitive, and flexible. Most experienced developers know how to do that. As we go forward, the ability to create a set of elegantly composed containers will be an essential skill. The right amount of functionality in each container, hierarchies of containers that simplify changes and upgrades, and the appropriate use of pipelines are all part of a production-ready, containerized application.&lt;/p&gt; &lt;p&gt;All in all, a great session with lots of best practices and good advice from two highly experienced speakers. If you&amp;#8217;d like to hear all the details, you can &lt;a href="https://youtu.be/nizud-1IK9c"&gt;view Scott and Ben&amp;#8217;s presentation online&lt;/a&gt;.&lt;/p&gt; &lt;hr /&gt; &lt;p&gt;&lt;a name="link1"&gt;&lt;/a&gt;&lt;sup&gt;1&lt;/sup&gt; Containers on a container ship fit together like Lego blocks, if you think about it. Makes the metaphor even stronger.&lt;/p&gt; &lt;p&gt;&lt;a name="link2"&gt;&lt;/a&gt;&lt;sup&gt;2&lt;/sup&gt; Which is maybe a couple of years. Seriously, how many things do you do today that you didn&amp;#8217;t do in 2015?&lt;/p&gt; &lt;p&gt;&lt;a name="link3"&gt;&lt;/a&gt;&lt;sup&gt;3&lt;/sup&gt; I didn&amp;#8217;t say the joke was funny, I just said it was old. Sorry about that.&lt;/p&gt; &lt;p&gt;&lt;a name="link4"&gt;&lt;/a&gt;&lt;sup&gt;4&lt;/sup&gt; Keep in mind that the tag &amp;#8220;latest&amp;#8221; is just a convention. It may or may not point to the most recent version of the image.&lt;/p&gt; &lt;p&gt;&lt;a name="link5"&gt;&lt;/a&gt;&lt;sup&gt;5&lt;/sup&gt; Ben recommended reading &lt;a href="https://itrevolution.com/wp-content/uploads/files/PhoenixProjectExcerpt.pdf"&gt;&lt;em&gt;The Phoenix Project&lt;/em&gt;&lt;/a&gt; as a cautionary tale.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F31%2Fred-hat-summit-building-production-ready-containers%2F&amp;#38;linkname=Red%20Hat%20Summit%3A%20Building%20production-ready%20containers" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F31%2Fred-hat-summit-building-production-ready-containers%2F&amp;#38;linkname=Red%20Hat%20Summit%3A%20Building%20production-ready%20containers" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F31%2Fred-hat-summit-building-production-ready-containers%2F&amp;#38;linkname=Red%20Hat%20Summit%3A%20Building%20production-ready%20containers" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F31%2Fred-hat-summit-building-production-ready-containers%2F&amp;#38;linkname=Red%20Hat%20Summit%3A%20Building%20production-ready%20containers" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F31%2Fred-hat-summit-building-production-ready-containers%2F&amp;#38;linkname=Red%20Hat%20Summit%3A%20Building%20production-ready%20containers" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F31%2Fred-hat-summit-building-production-ready-containers%2F&amp;#38;linkname=Red%20Hat%20Summit%3A%20Building%20production-ready%20containers" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F31%2Fred-hat-summit-building-production-ready-containers%2F&amp;#38;linkname=Red%20Hat%20Summit%3A%20Building%20production-ready%20containers" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F31%2Fred-hat-summit-building-production-ready-containers%2F&amp;#38;linkname=Red%20Hat%20Summit%3A%20Building%20production-ready%20containers" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F05%2F31%2Fred-hat-summit-building-production-ready-containers%2F&amp;#38;title=Red%20Hat%20Summit%3A%20Building%20production-ready%20containers" data-a2a-url="https://developers.redhat.com/blog/2018/05/31/red-hat-summit-building-production-ready-containers/" data-a2a-title="Red Hat Summit: Building production-ready containers"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/05/31/red-hat-summit-building-production-ready-containers/"&gt;Red Hat Summit: Building production-ready containers&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/ayWrMJ1HgEw" height="1" width="1" alt=""/&gt;</content><summary>Bringing excitement to the last session on the last day of the show, Scott McCarty and Ben Breard wrapped up this year’s Red Hat Summit with a discussion of best practices for production-ready containers. In the container era, Scott pointed out there are four building blocks you need to think about: Container images Container hosts Container orchestration Registry servers Each of these topics is a...</summary><dc:creator>Doug Tidwell</dc:creator><dc:date>2018-05-31T15:00:00Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/05/31/red-hat-summit-building-production-ready-containers/</feedburner:origLink></entry></feed>
